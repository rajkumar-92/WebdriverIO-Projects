{"version":3,"file":"simulator-management.js","names":["APPIUM_SIM_PREFIX","SETTINGS_CAPS","SAFARI_SETTINGS_CAPS","createSim","caps","platform","PLATFORM_NAME_IOS","devicesSetPath","simulatorDevicesSetPath","udid","Simctl","createDevice","util","uuidV4","toUpperCase","deviceName","platformVersion","getSimulator","checkExistence","getExistingSim","opts","appiumTestDevice","simctl","device","_","values","getDevices","name","startsWith","endsWith","state","log","warn","shutdownSimulator","resetTestProcesses","shutdown","runSimulatorReset","noReset","fullReset","debug","isKeychainsBackupSuccessful","keychainsExcludePatterns","keepKeyChains","backupKeychains","clean","restoreKeychains","info","bundleId","isRunning","enforceSimulatorShutdown","terminateApp","err","app","isSafari","browserName","toLowerCase","cleanSafari","scrubCustomApp","message","installToSimulator","newSimulator","isAppInstalled","removeApp","installApp","e","shutdownOtherSimulators","currentDevice","allDevices","flatMap","otherBootedDevices","filter","isEmpty","length","pluralize","shutdownDevice","launchAndQuitSimulator","sim","safari","timeout","launchAndQuit","checkPreferences","settings","setting","has","setLocaleAndPreferences","shutdownFn","noop","localConfig","setLocale","prefsUpdated","setPreferences","_updated","localeConfig","language","locale","calendarFormat","isFresh","simulatorStartupTimeout","updated","updateLocale","errorAndThrow","needToSetPrefs","needToSetSafariPrefs","setLocServicesPrefs","error","setSafariPrefs","locServ","find","locationServicesEnabled","locationServicesAuthorized","c","isUndefined","updateSettings","LocationServicesEnabled","msg","locAuth","updateLocationSettings","safariSettings","val","safariAllowPopups","WebKitJavaScriptCanOpenWindowsAutomatically","JavaScriptCanOpenWindowsAutomatically","safariIgnoreFraudWarning","WarnAboutFraudulentWebsites","safariOpenLinksInBackground","OpenLinksInBackground","size","updateSafariSettings"],"sources":["../../lib/simulator-management.js"],"sourcesContent":["import { getSimulator } from 'appium-ios-simulator';\nimport Simctl from 'node-simctl';\nimport { resetTestProcesses } from 'appium-webdriveragent';\nimport _ from 'lodash';\nimport log from './logger';\nimport { util } from 'appium/support';\nimport { PLATFORM_NAME_IOS } from './desired-caps';\n\n\nconst APPIUM_SIM_PREFIX = 'appiumTest';\nconst SETTINGS_CAPS = [\n  'locationServicesEnabled',\n  'locationServicesAuthorized',\n];\nconst SAFARI_SETTINGS_CAPS = [\n  'safariAllowPopups',\n  'safariIgnoreFraudWarning',\n  'safariOpenLinksInBackground',\n];\n\n/**\n * Capability set by a user\n *\n * @property {string} deviceName - A name for the device\n * @property {string} platformVersion - The version of iOS to use\n */\n/**\n * Create a new simulator with `appiumTest-` prefix and return the object.\n *\n * @param {object} SimCreationCaps - Capability set by a user. The options available are:\n * @property {string} platform [iOS] - Platform name in order to specify runtime such as 'iOS', 'tvOS', 'watchOS'\n * @returns {object} Simulator object associated with the udid passed in.\n */\nasync function createSim (caps, platform = PLATFORM_NAME_IOS) {\n  const devicesSetPath = caps.simulatorDevicesSetPath;\n  const udid = await new Simctl({devicesSetPath}).createDevice(\n    `${APPIUM_SIM_PREFIX}-${util.uuidV4().toUpperCase()}-${caps.deviceName}`,\n    caps.deviceName,\n    caps.platformVersion,\n    {platform},\n  );\n  return await getSimulator(udid, {\n    platform,\n    checkExistence: false,\n    devicesSetPath,\n  });\n}\n\n/**\n * @typedef {Object} SimulatorLookupOptions\n * @property {string?} deviceName - The name of the device to lookup\n * @property {string!} platformVersion - The platform version string\n * @property {string?} simulatorDevicesSetPath - The full path to the simulator devices set\n */\n\n/**\n * Get a simulator which is already running.\n *\n * @param {SimulatorLookupOptions?} opts\n * @returns {Simulator?} The matched Simulator instance or `null` if no matching  device is found.\n */\nasync function getExistingSim (opts = {}) {\n  const {\n    platformVersion,\n    deviceName,\n    simulatorDevicesSetPath: devicesSetPath,\n  } = opts;\n\n  let appiumTestDevice;\n  const simctl = new Simctl({devicesSetPath});\n  for (const device of _.values(await simctl.getDevices(platformVersion))) {\n    if ((deviceName && device.name === deviceName) || !deviceName) {\n      return await getSimulator(device.udid, {\n        platform: device.platform,\n        checkExistence: false,\n        devicesSetPath,\n      });\n    }\n\n    if (device.name.startsWith(APPIUM_SIM_PREFIX)\n      && ((deviceName && device.name.endsWith(deviceName)) || !deviceName)) {\n      appiumTestDevice = device;\n      // choose the first booted simulator\n      if (device.state === 'Booted') {\n        break;\n      }\n    }\n  }\n\n  if (appiumTestDevice) {\n    log.warn(`Unable to find device '${deviceName}'. ` +\n      `Found '${appiumTestDevice.name}' (udid: '${appiumTestDevice.udid}') instead`);\n    return await getSimulator(appiumTestDevice.udid, {\n      platform: appiumTestDevice.platform,\n      checkExistence: false,\n      devicesSetPath,\n    });\n  }\n  return null;\n}\n\nasync function shutdownSimulator (device) {\n  // stop XCTest processes if running to avoid unexpected side effects\n  await resetTestProcesses(device.udid, true);\n  await device.shutdown();\n}\n\nasync function runSimulatorReset (device, opts) {\n  if (opts.noReset && !opts.fullReset) {\n    // noReset === true && fullReset === false\n    log.debug('Reset: noReset is on. Leaving simulator as is');\n    return;\n  }\n\n  if (!device) {\n    log.debug('Reset: no device available. Skipping');\n    return;\n  }\n\n  if (opts.fullReset) {\n    log.debug('Reset: fullReset is on. Cleaning simulator');\n    await shutdownSimulator(device);\n    let isKeychainsBackupSuccessful = false;\n    if (opts.keychainsExcludePatterns || opts.keepKeyChains) {\n      isKeychainsBackupSuccessful = await device.backupKeychains();\n    }\n    await device.clean();\n    if (isKeychainsBackupSuccessful) {\n      await device.restoreKeychains(opts.keychainsExcludePatterns || []);\n      log.info(`Successfully restored keychains after full reset`);\n    } else if (opts.keychainsExcludePatterns || opts.keepKeyChains) {\n      log.warn('Cannot restore keychains after full reset, because ' +\n               'the backup operation did not succeed');\n    }\n  } else if (opts.bundleId) {\n    // fastReset or noReset\n\n    // Terminate the app under test if it is still running on Simulator\n    // Termination is not needed if Simulator is not running\n    if (await device.isRunning()) {\n      if (opts.enforceSimulatorShutdown) {\n        await shutdownSimulator(device);\n      } else {\n        try {\n          await device.simctl.terminateApp(opts.bundleId);\n        } catch (err) {\n          log.warn(`Reset: failed to terminate Simulator application with id \"${opts.bundleId}\"`);\n        }\n      }\n    }\n    if (opts.app) {\n      log.info('Not scrubbing third party app in anticipation of uninstall');\n      return;\n    }\n    const isSafari = (opts.browserName || '').toLowerCase() === 'safari';\n    try {\n      if (isSafari) {\n        await device.cleanSafari();\n      } else {\n        // iOS 8+ does not need basename\n        await device.scrubCustomApp('', opts.bundleId);\n      }\n    } catch (err) {\n      log.warn(err.message);\n      log.warn(`Reset: could not scrub ${isSafari ? 'Safari browser' : 'application with id \"' + opts.bundleId + '\"'}. Leaving as is.`);\n    }\n  }\n}\n\n/**\n * @typedef {Object} InstallOptions\n *\n * @property {?boolean} noReset [false] Whether to disable reset\n * @property {?boolean} newSimulator [false] Whether the simulator is brand new\n */\n\n/**\n * @param {object} device The simulator device object\n * @param {?string} app The app to the path\n * @param {string} bundleId The bundle id to ensure it is already installed and uninstall it\n * @param {?InstallOptions} opts\n */\nasync function installToSimulator (device, app, bundleId, opts = {}) {\n  if (!app) {\n    log.debug('No app path is given. Nothing to install.');\n    return;\n  }\n\n  const {\n    noReset = true,\n    newSimulator = false,\n  } = opts;\n\n  if (!newSimulator && bundleId && await device.isAppInstalled(bundleId)) {\n    if (noReset) {\n      log.debug(`App '${bundleId}' is already installed. No need to reinstall.`);\n      return;\n    }\n    log.debug(`Reset requested. Removing app with id '${bundleId}' from the device`);\n    await device.removeApp(bundleId);\n  }\n\n  log.debug(`Installing '${app}' on Simulator with UUID '${device.udid}'...`);\n  try {\n    await device.installApp(app);\n  } catch (e) {\n    // it sometimes fails on Xcode 10 because of a race condition\n    log.info(`Got an error on '${app}' install: ${e.message}`);\n    log.info('Retrying application install');\n    await device.installApp(app);\n  }\n  log.debug('The app has been installed successfully.');\n}\n\nasync function shutdownOtherSimulators (currentDevice) {\n  const simctl = new Simctl({\n    devicesSetPath: currentDevice.devicesSetPath\n  });\n  const allDevices = _.flatMap(_.values(await simctl.getDevices()));\n  const otherBootedDevices = allDevices.filter((device) => device.udid !== currentDevice.udid && device.state === 'Booted');\n  if (_.isEmpty(otherBootedDevices)) {\n    log.info('No other running simulators have been detected');\n    return;\n  }\n  log.info(`Detected ${otherBootedDevices.length} other running ${util.pluralize('Simulator', otherBootedDevices.length)}.` +\n    `Shutting them down...`);\n  for (const {udid} of otherBootedDevices) {\n    // It is necessary to stop the corresponding xcodebuild process before killing\n    // the simulator, otherwise it will be automatically restarted\n    await resetTestProcesses(udid, true);\n    simctl.udid = udid;\n    await simctl.shutdownDevice();\n  }\n}\n\nasync function launchAndQuitSimulator (sim, opts = {}) {\n  log.debug('No simulator directories found.');\n  const { safari, timeout } = opts;\n  return timeout\n    ? await sim.launchAndQuit(safari, timeout)\n    : await sim.launchAndQuit(safari);\n}\n\nfunction checkPreferences (settings, opts = {}) {\n  for (let setting of settings) {\n    if (_.has(opts, setting)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nasync function setLocaleAndPreferences (sim, opts, safari = false, shutdownFn = _.noop) {\n  const localConfig = await setLocale(sim, opts, {}, safari);\n  const prefsUpdated = await setPreferences(sim, opts, safari);\n  if (localConfig._updated || prefsUpdated) {\n    log.debug('Updated settings. Rebooting the simulator if it is already open');\n    await shutdownFn(sim);\n  } else {\n    log.debug('Setting did not need to be updated');\n  }\n  delete localConfig._updated;\n  return localConfig;\n}\n\n// pass in the simulator so that other systems that use the function can supply\n// whatever they have\nasync function setLocale (sim, opts, localeConfig = {}, safari = false) {\n  if (!opts.language && !opts.locale && !opts.calendarFormat) {\n    log.debug('No reason to set locale');\n    return {\n      _updated: false,\n    };\n  }\n\n  // we need the simulator to have its directories in place\n  if (await sim.isFresh()) {\n    await launchAndQuitSimulator(sim, {\n      safari,\n      timeout: opts.simulatorStartupTimeout,\n    });\n  }\n\n  log.debug('Setting locale information');\n  localeConfig = {\n    language: opts.language || localeConfig.language,\n    locale: opts.locale || localeConfig.locale,\n    calendarFormat: opts.calendarFormat || localeConfig.calendarFormat,\n    _updated: false,\n  };\n\n  try {\n    let updated = await sim.updateLocale(opts.language, opts.locale, opts.calendarFormat);\n    if (updated) {\n      localeConfig._updated = true;\n    }\n  } catch (e) {\n    log.errorAndThrow(`Appium was unable to set locale info: ${e}`);\n  }\n\n  return localeConfig;\n}\n\nasync function setPreferences (sim, opts, safari = false) {\n  let needToSetPrefs = checkPreferences(SETTINGS_CAPS, opts);\n  let needToSetSafariPrefs = checkPreferences(SAFARI_SETTINGS_CAPS, opts);\n  if (!needToSetPrefs && !needToSetSafariPrefs) {\n    log.debug('No iOS / app preferences to set');\n    return false;\n  }\n\n  log.debug('Setting iOS and app preferences');\n\n  if (await sim.isFresh()) {\n    await launchAndQuitSimulator(sim, {\n      safari,\n      timeout: opts.simulatorStartupTimeout,\n    });\n  }\n\n  let updated = false;\n  try {\n    if (needToSetPrefs) {\n      updated = await setLocServicesPrefs(sim, opts);\n    }\n  } catch (e) {\n    log.error('Error setting location services preferences, prefs will not work');\n    log.error(e);\n  }\n\n  try {\n    if (needToSetSafariPrefs) {\n      updated = await setSafariPrefs(sim, opts) || updated;\n    }\n  } catch (e) {\n    log.error('Error setting safari preferences, prefs will not work');\n    log.error(e);\n  }\n\n  return updated;\n}\n\nasync function setLocServicesPrefs (sim, opts = {}) {\n  let locServ = _.find([opts.locationServicesEnabled, opts.locationServicesAuthorized], (c) => !_.isUndefined(c));\n  if (!_.isUndefined(locServ)) {\n    locServ = locServ ? 1 : 0;\n    log.debug(`Setting location services to ${locServ}`);\n    await sim.updateSettings('locationServices', {\n      LocationServicesEnabled: locServ,\n      'LocationServicesEnabledIn7.0': locServ,\n      'LocationServicesEnabledIn8.0': locServ\n    });\n  }\n  if (!_.isUndefined(opts.locationServicesAuthorized)) {\n    if (!opts.bundleId) {\n      let msg = \"Can't set location services for app without bundle ID\";\n      log.errorAndThrow(msg);\n    }\n    let locAuth = !!opts.locationServicesAuthorized;\n    if (locAuth) {\n      log.debug('Authorizing location services for app');\n    } else {\n      log.debug('De-authorizing location services for app');\n    }\n    await sim.updateLocationSettings(opts.bundleId, locAuth);\n  }\n}\n\nasync function setSafariPrefs (sim, opts = {}) {\n  let safariSettings = {};\n\n  if (_.has(opts, 'safariAllowPopups')) {\n    const val = !!opts.safariAllowPopups;\n    log.debug(`Setting javascript window opening to '${val}'`);\n    safariSettings.WebKitJavaScriptCanOpenWindowsAutomatically = val;\n    safariSettings.JavaScriptCanOpenWindowsAutomatically = val;\n  }\n  if (_.has(opts, 'safariIgnoreFraudWarning')) {\n    const val = !opts.safariIgnoreFraudWarning;\n    log.debug(`Setting fraudulent website warning to '${val}'`);\n    safariSettings.WarnAboutFraudulentWebsites = val;\n  }\n  if (_.has(opts, 'safariOpenLinksInBackground')) {\n    const val = opts.safariOpenLinksInBackground ? 1 : 0;\n    log.debug(`Setting opening links in background to '${!!val}'`);\n    safariSettings.OpenLinksInBackground = val;\n  }\n  return (_.size(safariSettings) > 0)\n    ? await sim.updateSafariSettings(safariSettings)\n    : false;\n}\n\nexport {\n  createSim, getExistingSim, runSimulatorReset, installToSimulator,\n  shutdownSimulator, shutdownOtherSimulators,\n  setLocale, setPreferences, setLocaleAndPreferences,\n};\n"],"mappings":"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"}