{"version":3,"file":"xcodebuild.js","names":["DEFAULT_SIGNING_ID","PREBUILD_DELAY","RUNNER_SCHEME_IOS","LIB_SCHEME_IOS","ERROR_WRITING_ATTACHMENT","ERROR_COPYING_ATTACHMENT","IGNORED_ERRORS","RUNNER_SCHEME_TV","LIB_SCHEME_TV","xcodeLog","logger","getLogger","XcodeBuild","constructor","xcodeVersion","device","args","log","defaultLogger","realDevice","agentPath","bootstrapPath","platformVersion","platformName","iosSdkVersion","showXcodeLog","xcodeConfigFile","xcodeOrgId","xcodeSigningId","keychainPath","keychainPassword","prebuildWDA","usePrebuiltWDA","useSimpleBuildTest","useXctestrunFile","launchTimeout","wdaRemotePort","updatedWDABundleId","derivedDataPath","mjpegServerPort","prebuildDelay","_","isNumber","allowProvisioningDeviceRegistration","resultBundlePath","resultBundleVersion","init","noSessionProxy","deviveInfo","isRealDevice","udid","xctestrunFilePath","setXctestrunFile","resetProjectFile","updateProjectFile","retrieveDerivedDataPath","_derivedDataPathPromise","stdout","exec","err","warn","message","pattern","match","truncate","length","debug","path","dirname","normalize","reset","prebuild","start","xcodebuild","B","delay","cleanProject","tmpIsTvOS","isTvOS","libScheme","runnerScheme","scheme","getCommand","buildOnly","cmd","buildCmd","testCmd","push","versionMatch","RegExp","process","env","APPIUM_XCUITEST_TREAT_WARNINGS_AS_ERRORS","createSubProcess","setRealDeviceSecurity","generateXcodeConfigFile","join","Object","assign","USE_PORT","WDA_PRODUCT_BUNDLE_IDENTIFIER","WDA_RUNNER_BUNDLE_ID","MJPEG_SERVER_PORT","upgradeTimestamp","getWDAUpgradeTimestamp","UPGRADE_TIMESTAMP","SubProcess","cwd","detached","stdio","logXcodeOutput","logMsg","isBoolean","on","stderr","out","includes","logLocation","first","remove","trim","split","v","startsWith","sep","ignoreError","some","x","_wda_error_occurred","line","EOL","error","_wda_error_message","resolve","reject","code","signal","data","fs","readFile","processExited","Error","timer","timing","Timer","status","waitForStart","msg","currentStatus","retries","parseInt","retryInterval","proxyTimeout","timeout","command","ios","ip","agentUrl","JSON","stringify","getDuration","asMilliSeconds","toFixed","quit","killProcess"],"sources":["../../lib/xcodebuild.js"],"sourcesContent":["import { retryInterval } from 'asyncbox';\nimport { SubProcess, exec } from 'teen_process';\nimport { fs, logger, timing } from 'appium/support';\nimport defaultLogger from './logger';\nimport B from 'bluebird';\nimport {\n  setRealDeviceSecurity, generateXcodeConfigFile, setXctestrunFile,\n  updateProjectFile, resetProjectFile, killProcess,\n  getWDAUpgradeTimestamp, isTvOS } from './utils';\nimport _ from 'lodash';\nimport path from 'path';\nimport { EOL } from 'os';\nimport { WDA_RUNNER_BUNDLE_ID } from './constants';\n\n\nconst DEFAULT_SIGNING_ID = 'iPhone Developer';\nconst PREBUILD_DELAY = 0;\nconst RUNNER_SCHEME_IOS = 'WebDriverAgentRunner';\nconst LIB_SCHEME_IOS = 'WebDriverAgentLib';\n\nconst ERROR_WRITING_ATTACHMENT = 'Error writing attachment data to file';\nconst ERROR_COPYING_ATTACHMENT = 'Error copying testing attachment';\nconst IGNORED_ERRORS = [\n  ERROR_WRITING_ATTACHMENT,\n  ERROR_COPYING_ATTACHMENT,\n  'Failed to remove screenshot at path',\n];\n\nconst RUNNER_SCHEME_TV = 'WebDriverAgentRunner_tvOS';\nconst LIB_SCHEME_TV = 'WebDriverAgentLib_tvOS';\n\nconst xcodeLog = logger.getLogger('Xcode');\n\n\nclass XcodeBuild {\n  constructor (xcodeVersion, device, args = {}, log = null) {\n    this.xcodeVersion = xcodeVersion;\n\n    this.device = device;\n    this.log = log ?? defaultLogger;\n\n    this.realDevice = args.realDevice;\n\n    this.agentPath = args.agentPath;\n    this.bootstrapPath = args.bootstrapPath;\n\n    this.platformVersion = args.platformVersion;\n    this.platformName = args.platformName;\n    this.iosSdkVersion = args.iosSdkVersion;\n\n    this.showXcodeLog = args.showXcodeLog;\n\n    this.xcodeConfigFile = args.xcodeConfigFile;\n    this.xcodeOrgId = args.xcodeOrgId;\n    this.xcodeSigningId = args.xcodeSigningId || DEFAULT_SIGNING_ID;\n    this.keychainPath = args.keychainPath;\n    this.keychainPassword = args.keychainPassword;\n\n    this.prebuildWDA = args.prebuildWDA;\n    this.usePrebuiltWDA = args.usePrebuiltWDA;\n    this.useSimpleBuildTest = args.useSimpleBuildTest;\n\n    this.useXctestrunFile = args.useXctestrunFile;\n\n    this.launchTimeout = args.launchTimeout;\n\n    this.wdaRemotePort = args.wdaRemotePort;\n\n    this.updatedWDABundleId = args.updatedWDABundleId;\n    this.derivedDataPath = args.derivedDataPath;\n\n    this.mjpegServerPort = args.mjpegServerPort;\n\n    this.prebuildDelay = _.isNumber(args.prebuildDelay) ? args.prebuildDelay : PREBUILD_DELAY;\n\n    this.allowProvisioningDeviceRegistration = args.allowProvisioningDeviceRegistration;\n\n    this.resultBundlePath = args.resultBundlePath;\n    this.resultBundleVersion = args.resultBundleVersion;\n  }\n\n  async init (noSessionProxy) {\n    this.noSessionProxy = noSessionProxy;\n\n    if (this.useXctestrunFile) {\n      const deviveInfo = {\n        isRealDevice: this.realDevice,\n        udid: this.device.udid,\n        platformVersion: this.platformVersion,\n        platformName: this.platformName\n      };\n      this.xctestrunFilePath = await setXctestrunFile(deviveInfo, this.iosSdkVersion, this.bootstrapPath, this.wdaRemotePort);\n      return;\n    }\n\n    // if necessary, update the bundleId to user's specification\n    if (this.realDevice) {\n      // In case the project still has the user specific bundle ID, reset the project file first.\n      // - We do this reset even if updatedWDABundleId is not specified,\n      //   since the previous updatedWDABundleId test has generated the user specific bundle ID project file.\n      // - We don't call resetProjectFile for simulator,\n      //   since simulator test run will work with any user specific bundle ID.\n      await resetProjectFile(this.agentPath);\n      if (this.updatedWDABundleId) {\n        await updateProjectFile(this.agentPath, this.updatedWDABundleId);\n      }\n    }\n  }\n\n  async retrieveDerivedDataPath () {\n    if (this.derivedDataPath) {\n      return this.derivedDataPath;\n    }\n\n    // avoid race conditions\n    if (this._derivedDataPathPromise) {\n      return await this._derivedDataPathPromise;\n    }\n\n    this._derivedDataPathPromise = (async () => {\n      let stdout;\n      try {\n        ({stdout} = await exec('xcodebuild', ['-project', this.agentPath, '-showBuildSettings']));\n      } catch (err) {\n        this.log.warn(`Cannot retrieve WDA build settings. Original error: ${err.message}`);\n        return;\n      }\n\n      const pattern = /^\\s*BUILD_DIR\\s+=\\s+(\\/.*)/m;\n      const match = pattern.exec(stdout);\n      if (!match) {\n        this.log.warn(`Cannot parse WDA build dir from ${_.truncate(stdout, {length: 300})}`);\n        return;\n      }\n      this.log.debug(`Parsed BUILD_DIR configuration value: '${match[1]}'`);\n      // Derived data root is two levels higher over the build dir\n      this.derivedDataPath = path.dirname(path.dirname(path.normalize(match[1])));\n      this.log.debug(`Got derived data root: '${this.derivedDataPath}'`);\n      return this.derivedDataPath;\n    })();\n    return await this._derivedDataPathPromise;\n  }\n\n  async reset () {\n    // if necessary, reset the bundleId to original value\n    if (this.realDevice && this.updatedWDABundleId) {\n      await resetProjectFile(this.agentPath);\n    }\n  }\n\n  async prebuild () {\n    // first do a build phase\n    this.log.debug('Pre-building WDA before launching test');\n    this.usePrebuiltWDA = true;\n    await this.start(true);\n\n    this.xcodebuild = null;\n\n    // pause a moment\n    await B.delay(this.prebuildDelay);\n  }\n\n  async cleanProject () {\n    const tmpIsTvOS = isTvOS(this.platformName);\n    const libScheme = tmpIsTvOS ? LIB_SCHEME_TV : LIB_SCHEME_IOS;\n    const runnerScheme = tmpIsTvOS ? RUNNER_SCHEME_TV : RUNNER_SCHEME_IOS;\n\n    for (const scheme of [libScheme, runnerScheme]) {\n      this.log.debug(`Cleaning the project scheme '${scheme}' to make sure there are no leftovers from previous installs`);\n      await exec('xcodebuild', [\n        'clean',\n        '-project', this.agentPath,\n        '-scheme', scheme,\n      ]);\n    }\n  }\n\n  getCommand (buildOnly = false) {\n    let cmd = 'xcodebuild';\n    let args;\n\n    // figure out the targets for xcodebuild\n    const [buildCmd, testCmd] = this.useSimpleBuildTest ? ['build', 'test'] : ['build-for-testing', 'test-without-building'];\n    if (buildOnly) {\n      args = [buildCmd];\n    } else if (this.usePrebuiltWDA || this.useXctestrunFile) {\n      args = [testCmd];\n    } else {\n      args = [buildCmd, testCmd];\n    }\n\n    if (this.allowProvisioningDeviceRegistration) {\n      // To -allowProvisioningDeviceRegistration flag takes effect, -allowProvisioningUpdates needs to be passed as well.\n      args.push('-allowProvisioningUpdates', '-allowProvisioningDeviceRegistration');\n    }\n\n    if (this.resultBundlePath) {\n      args.push('-resultBundlePath', this.resultBundlePath);\n    }\n\n    if (this.resultBundleVersion) {\n      args.push('-resultBundleVersion', this.resultBundleVersion);\n    }\n\n    if (this.useXctestrunFile) {\n      args.push('-xctestrun', this.xctestrunFilePath);\n    } else {\n      const runnerScheme = isTvOS(this.platformName) ? RUNNER_SCHEME_TV : RUNNER_SCHEME_IOS;\n      args.push('-project', this.agentPath, '-scheme', runnerScheme);\n      if (this.derivedDataPath) {\n        args.push('-derivedDataPath', this.derivedDataPath);\n      }\n    }\n    args.push('-destination', `id=${this.device.udid}`);\n\n    const versionMatch = new RegExp(/^(\\d+)\\.(\\d+)/).exec(this.platformVersion);\n    if (versionMatch) {\n      args.push(`IPHONEOS_DEPLOYMENT_TARGET=${versionMatch[1]}.${versionMatch[2]}`);\n    } else {\n      this.log.warn(`Cannot parse major and minor version numbers from platformVersion \"${this.platformVersion}\". ` +\n        'Will build for the default platform instead');\n    }\n\n    if (this.realDevice && this.xcodeConfigFile) {\n      this.log.debug(`Using Xcode configuration file: '${this.xcodeConfigFile}'`);\n      args.push('-xcconfig', this.xcodeConfigFile);\n    }\n\n    if (!process.env.APPIUM_XCUITEST_TREAT_WARNINGS_AS_ERRORS) {\n      // This sometimes helps to survive Xcode updates\n      args.push('GCC_TREAT_WARNINGS_AS_ERRORS=0');\n    }\n\n    // Below option slightly reduces build time in debug build\n    // with preventing to generate `/Index/DataStore` which is used by development\n    args.push('COMPILER_INDEX_STORE_ENABLE=NO');\n\n    return {cmd, args};\n  }\n\n  async createSubProcess (buildOnly = false) {\n    if (!this.useXctestrunFile && this.realDevice) {\n      if (this.keychainPath && this.keychainPassword) {\n        await setRealDeviceSecurity(this.keychainPath, this.keychainPassword);\n      }\n      if (this.xcodeOrgId && this.xcodeSigningId && !this.xcodeConfigFile) {\n        this.xcodeConfigFile = await generateXcodeConfigFile(this.xcodeOrgId, this.xcodeSigningId);\n      }\n    }\n\n    const {cmd, args} = this.getCommand(buildOnly);\n    this.log.debug(`Beginning ${buildOnly ? 'build' : 'test'} with command '${cmd} ${args.join(' ')}' ` +\n      `in directory '${this.bootstrapPath}'`);\n    const env = Object.assign({}, process.env, {\n      USE_PORT: this.wdaRemotePort,\n      WDA_PRODUCT_BUNDLE_IDENTIFIER: this.updatedWDABundleId || WDA_RUNNER_BUNDLE_ID,\n    });\n    if (this.mjpegServerPort) {\n      // https://github.com/appium/WebDriverAgent/pull/105\n      env.MJPEG_SERVER_PORT = this.mjpegServerPort;\n    }\n    const upgradeTimestamp = await getWDAUpgradeTimestamp(this.bootstrapPath);\n    if (upgradeTimestamp) {\n      env.UPGRADE_TIMESTAMP = upgradeTimestamp;\n    }\n    const xcodebuild = new SubProcess(cmd, args, {\n      cwd: this.bootstrapPath,\n      env,\n      detached: true,\n      stdio: ['ignore', 'pipe', 'pipe'],\n    });\n\n    let logXcodeOutput = !!this.showXcodeLog;\n    const logMsg = _.isBoolean(this.showXcodeLog)\n      ? `Output from xcodebuild ${this.showXcodeLog ? 'will' : 'will not'} be logged`\n      : 'Output from xcodebuild will only be logged if any errors are present there';\n    this.log.debug(`${logMsg}. To change this, use 'showXcodeLog' desired capability`);\n    xcodebuild.on('output', (stdout, stderr) => {\n      let out = stdout || stderr;\n      // we want to pull out the log file that is created, and highlight it\n      // for diagnostic purposes\n      if (out.includes('Writing diagnostic log for test session to')) {\n        // pull out the first line that begins with the path separator\n        // which *should* be the line indicating the log file generated\n        xcodebuild.logLocation = _.first(_.remove(out.trim().split('\\n'), (v) => v.startsWith(path.sep)));\n        xcodeLog.debug(`Log file for xcodebuild test: ${xcodebuild.logLocation}`);\n      }\n\n      // if we have an error we want to output the logs\n      // otherwise the failure is inscrutible\n      // but do not log permission errors from trying to write to attachments folder\n      const ignoreError = IGNORED_ERRORS.some((x) => out.includes(x));\n      if (this.showXcodeLog !== false && out.includes('Error Domain=') && !ignoreError) {\n        logXcodeOutput = true;\n\n        // terrible hack to handle case where xcode return 0 but is failing\n        xcodebuild._wda_error_occurred = true;\n      }\n\n      // do not log permission errors from trying to write to attachments folder\n      if (logXcodeOutput && !ignoreError) {\n        for (const line of out.split(EOL)) {\n          xcodeLog.error(line);\n          if (line) {\n            xcodebuild._wda_error_message += `${EOL}${line}`;\n          }\n        }\n      }\n    });\n\n    return xcodebuild;\n  }\n\n  async start (buildOnly = false) {\n    this.xcodebuild = await this.createSubProcess(buildOnly);\n    // Store xcodebuild message\n    this.xcodebuild._wda_error_message = '';\n\n    // wrap the start procedure in a promise so that we can catch, and report,\n    // any startup errors that are thrown as events\n    return await new B((resolve, reject) => {\n      this.xcodebuild.on('exit', async (code, signal) => {\n        xcodeLog.error(`xcodebuild exited with code '${code}' and signal '${signal}'`);\n        // print out the xcodebuild file if users have asked for it\n        if (this.showXcodeLog && this.xcodebuild.logLocation) {\n          xcodeLog.error(`Contents of xcodebuild log file '${this.xcodebuild.logLocation}':`);\n          try {\n            let data = await fs.readFile(this.xcodebuild.logLocation, 'utf8');\n            for (let line of data.split('\\n')) {\n              xcodeLog.error(line);\n            }\n          } catch (err) {\n            xcodeLog.error(`Unable to access xcodebuild log file: '${err.message}'`);\n          }\n        }\n        this.xcodebuild.processExited = true;\n        if (this.xcodebuild._wda_error_occurred || (!signal && code !== 0)) {\n          return reject(new Error(`xcodebuild failed with code ${code}${EOL}` +\n            `xcodebuild error message:${EOL}${this.xcodebuild._wda_error_message}`));\n        }\n        // in the case of just building, the process will exit and that is our finish\n        if (buildOnly) {\n          return resolve();\n        }\n      });\n\n      return (async () => {\n        try {\n          const timer = new timing.Timer().start();\n          await this.xcodebuild.start(true);\n          if (!buildOnly) {\n            let status = await this.waitForStart(timer);\n            resolve(status);\n          }\n        } catch (err) {\n          let msg = `Unable to start WebDriverAgent: ${err}`;\n          this.log.error(msg);\n          reject(new Error(msg));\n        }\n      })();\n    });\n  }\n\n  async waitForStart (timer) {\n    // try to connect once every 0.5 seconds, until `launchTimeout` is up\n    this.log.debug(`Waiting up to ${this.launchTimeout}ms for WebDriverAgent to start`);\n    let currentStatus = null;\n    try {\n      let retries = parseInt(this.launchTimeout / 500, 10);\n      await retryInterval(retries, 1000, async () => {\n        if (this.xcodebuild.processExited) {\n          // there has been an error elsewhere and we need to short-circuit\n          return;\n        }\n        const proxyTimeout = this.noSessionProxy.timeout;\n        this.noSessionProxy.timeout = 1000;\n        try {\n          currentStatus = await this.noSessionProxy.command('/status', 'GET');\n          if (currentStatus && currentStatus.ios && currentStatus.ios.ip) {\n            this.agentUrl = currentStatus.ios.ip;\n          }\n          this.log.debug(`WebDriverAgent information:`);\n          this.log.debug(JSON.stringify(currentStatus, null, 2));\n        } catch (err) {\n          throw new Error(`Unable to connect to running WebDriverAgent: ${err.message}`);\n        } finally {\n          this.noSessionProxy.timeout = proxyTimeout;\n        }\n      });\n\n      if (this.xcodebuild.processExited) {\n        // there has been an error elsewhere and we need to short-circuit\n        return currentStatus;\n      }\n\n      this.log.debug(`WebDriverAgent successfully started after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } catch (err) {\n      // at this point, if we have not had any errors from xcode itself (reported\n      // elsewhere), we can let this go through and try to create the session\n      this.log.debug(err.message);\n      this.log.warn(`Getting status of WebDriverAgent on device timed out. Continuing`);\n    }\n    return currentStatus;\n  }\n\n  async quit () {\n    await killProcess('xcodebuild', this.xcodebuild);\n  }\n}\n\nexport { XcodeBuild };\nexport default XcodeBuild;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA,MAAMA,kBAAkB,GAAG,kBAAkB;AAC7C,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,iBAAiB,GAAG,sBAAsB;AAChD,MAAMC,cAAc,GAAG,mBAAmB;AAE1C,MAAMC,wBAAwB,GAAG,uCAAuC;AACxE,MAAMC,wBAAwB,GAAG,kCAAkC;AACnE,MAAMC,cAAc,GAAG,CACrBF,wBAAwB,EACxBC,wBAAwB,EACxB,qCAAqC,CACtC;AAED,MAAME,gBAAgB,GAAG,2BAA2B;AACpD,MAAMC,aAAa,GAAG,wBAAwB;AAE9C,MAAMC,QAAQ,GAAGC,eAAM,CAACC,SAAS,CAAC,OAAO,CAAC;AAG1C,MAAMC,UAAU,CAAC;EACfC,WAAW,CAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,GAAG,GAAG,IAAI,EAAE;IACxD,IAAI,CAACH,YAAY,GAAGA,YAAY;IAEhC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,GAAG,GAAGA,GAAG,IAAIC,eAAa;IAE/B,IAAI,CAACC,UAAU,GAAGH,IAAI,CAACG,UAAU;IAEjC,IAAI,CAACC,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAC/B,IAAI,CAACC,aAAa,GAAGL,IAAI,CAACK,aAAa;IAEvC,IAAI,CAACC,eAAe,GAAGN,IAAI,CAACM,eAAe;IAC3C,IAAI,CAACC,YAAY,GAAGP,IAAI,CAACO,YAAY;IACrC,IAAI,CAACC,aAAa,GAAGR,IAAI,CAACQ,aAAa;IAEvC,IAAI,CAACC,YAAY,GAAGT,IAAI,CAACS,YAAY;IAErC,IAAI,CAACC,eAAe,GAAGV,IAAI,CAACU,eAAe;IAC3C,IAAI,CAACC,UAAU,GAAGX,IAAI,CAACW,UAAU;IACjC,IAAI,CAACC,cAAc,GAAGZ,IAAI,CAACY,cAAc,IAAI5B,kBAAkB;IAC/D,IAAI,CAAC6B,YAAY,GAAGb,IAAI,CAACa,YAAY;IACrC,IAAI,CAACC,gBAAgB,GAAGd,IAAI,CAACc,gBAAgB;IAE7C,IAAI,CAACC,WAAW,GAAGf,IAAI,CAACe,WAAW;IACnC,IAAI,CAACC,cAAc,GAAGhB,IAAI,CAACgB,cAAc;IACzC,IAAI,CAACC,kBAAkB,GAAGjB,IAAI,CAACiB,kBAAkB;IAEjD,IAAI,CAACC,gBAAgB,GAAGlB,IAAI,CAACkB,gBAAgB;IAE7C,IAAI,CAACC,aAAa,GAAGnB,IAAI,CAACmB,aAAa;IAEvC,IAAI,CAACC,aAAa,GAAGpB,IAAI,CAACoB,aAAa;IAEvC,IAAI,CAACC,kBAAkB,GAAGrB,IAAI,CAACqB,kBAAkB;IACjD,IAAI,CAACC,eAAe,GAAGtB,IAAI,CAACsB,eAAe;IAE3C,IAAI,CAACC,eAAe,GAAGvB,IAAI,CAACuB,eAAe;IAE3C,IAAI,CAACC,aAAa,GAAGC,eAAC,CAACC,QAAQ,CAAC1B,IAAI,CAACwB,aAAa,CAAC,GAAGxB,IAAI,CAACwB,aAAa,GAAGvC,cAAc;IAEzF,IAAI,CAAC0C,mCAAmC,GAAG3B,IAAI,CAAC2B,mCAAmC;IAEnF,IAAI,CAACC,gBAAgB,GAAG5B,IAAI,CAAC4B,gBAAgB;IAC7C,IAAI,CAACC,mBAAmB,GAAG7B,IAAI,CAAC6B,mBAAmB;EACrD;EAEA,MAAMC,IAAI,CAAEC,cAAc,EAAE;IAC1B,IAAI,CAACA,cAAc,GAAGA,cAAc;IAEpC,IAAI,IAAI,CAACb,gBAAgB,EAAE;MACzB,MAAMc,UAAU,GAAG;QACjBC,YAAY,EAAE,IAAI,CAAC9B,UAAU;QAC7B+B,IAAI,EAAE,IAAI,CAACnC,MAAM,CAACmC,IAAI;QACtB5B,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC;MACD,IAAI,CAAC4B,iBAAiB,GAAG,MAAM,IAAAC,uBAAgB,EAACJ,UAAU,EAAE,IAAI,CAACxB,aAAa,EAAE,IAAI,CAACH,aAAa,EAAE,IAAI,CAACe,aAAa,CAAC;MACvH;IACF;;IAGA,IAAI,IAAI,CAACjB,UAAU,EAAE;MAMnB,MAAM,IAAAkC,uBAAgB,EAAC,IAAI,CAACjC,SAAS,CAAC;MACtC,IAAI,IAAI,CAACiB,kBAAkB,EAAE;QAC3B,MAAM,IAAAiB,wBAAiB,EAAC,IAAI,CAAClC,SAAS,EAAE,IAAI,CAACiB,kBAAkB,CAAC;MAClE;IACF;EACF;EAEA,MAAMkB,uBAAuB,GAAI;IAC/B,IAAI,IAAI,CAACjB,eAAe,EAAE;MACxB,OAAO,IAAI,CAACA,eAAe;IAC7B;;IAGA,IAAI,IAAI,CAACkB,uBAAuB,EAAE;MAChC,OAAO,MAAM,IAAI,CAACA,uBAAuB;IAC3C;IAEA,IAAI,CAACA,uBAAuB,GAAG,CAAC,YAAY;MAC1C,IAAIC,MAAM;MACV,IAAI;QACF,CAAC;UAACA;QAAM,CAAC,GAAG,MAAM,IAAAC,kBAAI,EAAC,YAAY,EAAE,CAAC,UAAU,EAAE,IAAI,CAACtC,SAAS,EAAE,oBAAoB,CAAC,CAAC;MAC1F,CAAC,CAAC,OAAOuC,GAAG,EAAE;QACZ,IAAI,CAAC1C,GAAG,CAAC2C,IAAI,CAAE,uDAAsDD,GAAG,CAACE,OAAQ,EAAC,CAAC;QACnF;MACF;MAEA,MAAMC,OAAO,GAAG,6BAA6B;MAC7C,MAAMC,KAAK,GAAGD,OAAO,CAACJ,IAAI,CAACD,MAAM,CAAC;MAClC,IAAI,CAACM,KAAK,EAAE;QACV,IAAI,CAAC9C,GAAG,CAAC2C,IAAI,CAAE,mCAAkCnB,eAAC,CAACuB,QAAQ,CAACP,MAAM,EAAE;UAACQ,MAAM,EAAE;QAAG,CAAC,CAAE,EAAC,CAAC;QACrF;MACF;MACA,IAAI,CAAChD,GAAG,CAACiD,KAAK,CAAE,0CAAyCH,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC;MAErE,IAAI,CAACzB,eAAe,GAAG6B,aAAI,CAACC,OAAO,CAACD,aAAI,CAACC,OAAO,CAACD,aAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3E,IAAI,CAAC9C,GAAG,CAACiD,KAAK,CAAE,2BAA0B,IAAI,CAAC5B,eAAgB,GAAE,CAAC;MAClE,OAAO,IAAI,CAACA,eAAe;IAC7B,CAAC,GAAG;IACJ,OAAO,MAAM,IAAI,CAACkB,uBAAuB;EAC3C;EAEA,MAAMc,KAAK,GAAI;IAEb,IAAI,IAAI,CAACnD,UAAU,IAAI,IAAI,CAACkB,kBAAkB,EAAE;MAC9C,MAAM,IAAAgB,uBAAgB,EAAC,IAAI,CAACjC,SAAS,CAAC;IACxC;EACF;EAEA,MAAMmD,QAAQ,GAAI;IAEhB,IAAI,CAACtD,GAAG,CAACiD,KAAK,CAAC,wCAAwC,CAAC;IACxD,IAAI,CAAClC,cAAc,GAAG,IAAI;IAC1B,MAAM,IAAI,CAACwC,KAAK,CAAC,IAAI,CAAC;IAEtB,IAAI,CAACC,UAAU,GAAG,IAAI;;IAGtB,MAAMC,iBAAC,CAACC,KAAK,CAAC,IAAI,CAACnC,aAAa,CAAC;EACnC;EAEA,MAAMoC,YAAY,GAAI;IACpB,MAAMC,SAAS,GAAG,IAAAC,aAAM,EAAC,IAAI,CAACvD,YAAY,CAAC;IAC3C,MAAMwD,SAAS,GAAGF,SAAS,GAAGrE,aAAa,GAAGL,cAAc;IAC5D,MAAM6E,YAAY,GAAGH,SAAS,GAAGtE,gBAAgB,GAAGL,iBAAiB;IAErE,KAAK,MAAM+E,MAAM,IAAI,CAACF,SAAS,EAAEC,YAAY,CAAC,EAAE;MAC9C,IAAI,CAAC/D,GAAG,CAACiD,KAAK,CAAE,gCAA+Be,MAAO,8DAA6D,CAAC;MACpH,MAAM,IAAAvB,kBAAI,EAAC,YAAY,EAAE,CACvB,OAAO,EACP,UAAU,EAAE,IAAI,CAACtC,SAAS,EAC1B,SAAS,EAAE6D,MAAM,CAClB,CAAC;IACJ;EACF;EAEAC,UAAU,CAAEC,SAAS,GAAG,KAAK,EAAE;IAC7B,IAAIC,GAAG,GAAG,YAAY;IACtB,IAAIpE,IAAI;;IAGR,MAAM,CAACqE,QAAQ,EAAEC,OAAO,CAAC,GAAG,IAAI,CAACrD,kBAAkB,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,uBAAuB,CAAC;IACxH,IAAIkD,SAAS,EAAE;MACbnE,IAAI,GAAG,CAACqE,QAAQ,CAAC;IACnB,CAAC,MAAM,IAAI,IAAI,CAACrD,cAAc,IAAI,IAAI,CAACE,gBAAgB,EAAE;MACvDlB,IAAI,GAAG,CAACsE,OAAO,CAAC;IAClB,CAAC,MAAM;MACLtE,IAAI,GAAG,CAACqE,QAAQ,EAAEC,OAAO,CAAC;IAC5B;IAEA,IAAI,IAAI,CAAC3C,mCAAmC,EAAE;MAE5C3B,IAAI,CAACuE,IAAI,CAAC,2BAA2B,EAAE,sCAAsC,CAAC;IAChF;IAEA,IAAI,IAAI,CAAC3C,gBAAgB,EAAE;MACzB5B,IAAI,CAACuE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC3C,gBAAgB,CAAC;IACvD;IAEA,IAAI,IAAI,CAACC,mBAAmB,EAAE;MAC5B7B,IAAI,CAACuE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC1C,mBAAmB,CAAC;IAC7D;IAEA,IAAI,IAAI,CAACX,gBAAgB,EAAE;MACzBlB,IAAI,CAACuE,IAAI,CAAC,YAAY,EAAE,IAAI,CAACpC,iBAAiB,CAAC;IACjD,CAAC,MAAM;MACL,MAAM6B,YAAY,GAAG,IAAAF,aAAM,EAAC,IAAI,CAACvD,YAAY,CAAC,GAAGhB,gBAAgB,GAAGL,iBAAiB;MACrFc,IAAI,CAACuE,IAAI,CAAC,UAAU,EAAE,IAAI,CAACnE,SAAS,EAAE,SAAS,EAAE4D,YAAY,CAAC;MAC9D,IAAI,IAAI,CAAC1C,eAAe,EAAE;QACxBtB,IAAI,CAACuE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAACjD,eAAe,CAAC;MACrD;IACF;IACAtB,IAAI,CAACuE,IAAI,CAAC,cAAc,EAAG,MAAK,IAAI,CAACxE,MAAM,CAACmC,IAAK,EAAC,CAAC;IAEnD,MAAMsC,YAAY,GAAG,IAAIC,MAAM,CAAC,eAAe,CAAC,CAAC/B,IAAI,CAAC,IAAI,CAACpC,eAAe,CAAC;IAC3E,IAAIkE,YAAY,EAAE;MAChBxE,IAAI,CAACuE,IAAI,CAAE,8BAA6BC,YAAY,CAAC,CAAC,CAAE,IAAGA,YAAY,CAAC,CAAC,CAAE,EAAC,CAAC;IAC/E,CAAC,MAAM;MACL,IAAI,CAACvE,GAAG,CAAC2C,IAAI,CAAE,sEAAqE,IAAI,CAACtC,eAAgB,KAAI,GAC3G,6CAA6C,CAAC;IAClD;IAEA,IAAI,IAAI,CAACH,UAAU,IAAI,IAAI,CAACO,eAAe,EAAE;MAC3C,IAAI,CAACT,GAAG,CAACiD,KAAK,CAAE,oCAAmC,IAAI,CAACxC,eAAgB,GAAE,CAAC;MAC3EV,IAAI,CAACuE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC7D,eAAe,CAAC;IAC9C;IAEA,IAAI,CAACgE,OAAO,CAACC,GAAG,CAACC,wCAAwC,EAAE;MAEzD5E,IAAI,CAACuE,IAAI,CAAC,gCAAgC,CAAC;IAC7C;;IAIAvE,IAAI,CAACuE,IAAI,CAAC,gCAAgC,CAAC;IAE3C,OAAO;MAACH,GAAG;MAAEpE;IAAI,CAAC;EACpB;EAEA,MAAM6E,gBAAgB,CAAEV,SAAS,GAAG,KAAK,EAAE;IACzC,IAAI,CAAC,IAAI,CAACjD,gBAAgB,IAAI,IAAI,CAACf,UAAU,EAAE;MAC7C,IAAI,IAAI,CAACU,YAAY,IAAI,IAAI,CAACC,gBAAgB,EAAE;QAC9C,MAAM,IAAAgE,4BAAqB,EAAC,IAAI,CAACjE,YAAY,EAAE,IAAI,CAACC,gBAAgB,CAAC;MACvE;MACA,IAAI,IAAI,CAACH,UAAU,IAAI,IAAI,CAACC,cAAc,IAAI,CAAC,IAAI,CAACF,eAAe,EAAE;QACnE,IAAI,CAACA,eAAe,GAAG,MAAM,IAAAqE,8BAAuB,EAAC,IAAI,CAACpE,UAAU,EAAE,IAAI,CAACC,cAAc,CAAC;MAC5F;IACF;IAEA,MAAM;MAACwD,GAAG;MAAEpE;IAAI,CAAC,GAAG,IAAI,CAACkE,UAAU,CAACC,SAAS,CAAC;IAC9C,IAAI,CAAClE,GAAG,CAACiD,KAAK,CAAE,aAAYiB,SAAS,GAAG,OAAO,GAAG,MAAO,kBAAiBC,GAAI,IAAGpE,IAAI,CAACgF,IAAI,CAAC,GAAG,CAAE,IAAG,GAChG,iBAAgB,IAAI,CAAC3E,aAAc,GAAE,CAAC;IACzC,MAAMsE,GAAG,GAAGM,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,OAAO,CAACC,GAAG,EAAE;MACzCQ,QAAQ,EAAE,IAAI,CAAC/D,aAAa;MAC5BgE,6BAA6B,EAAE,IAAI,CAAC/D,kBAAkB,IAAIgE;IAC5D,CAAC,CAAC;IACF,IAAI,IAAI,CAAC9D,eAAe,EAAE;MAExBoD,GAAG,CAACW,iBAAiB,GAAG,IAAI,CAAC/D,eAAe;IAC9C;IACA,MAAMgE,gBAAgB,GAAG,MAAM,IAAAC,6BAAsB,EAAC,IAAI,CAACnF,aAAa,CAAC;IACzE,IAAIkF,gBAAgB,EAAE;MACpBZ,GAAG,CAACc,iBAAiB,GAAGF,gBAAgB;IAC1C;IACA,MAAM9B,UAAU,GAAG,IAAIiC,wBAAU,CAACtB,GAAG,EAAEpE,IAAI,EAAE;MAC3C2F,GAAG,EAAE,IAAI,CAACtF,aAAa;MACvBsE,GAAG;MACHiB,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM;IAClC,CAAC,CAAC;IAEF,IAAIC,cAAc,GAAG,CAAC,CAAC,IAAI,CAACrF,YAAY;IACxC,MAAMsF,MAAM,GAAGtE,eAAC,CAACuE,SAAS,CAAC,IAAI,CAACvF,YAAY,CAAC,GACxC,0BAAyB,IAAI,CAACA,YAAY,GAAG,MAAM,GAAG,UAAW,YAAW,GAC7E,4EAA4E;IAChF,IAAI,CAACR,GAAG,CAACiD,KAAK,CAAE,GAAE6C,MAAO,yDAAwD,CAAC;IAClFtC,UAAU,CAACwC,EAAE,CAAC,QAAQ,EAAE,CAACxD,MAAM,EAAEyD,MAAM,KAAK;MAC1C,IAAIC,GAAG,GAAG1D,MAAM,IAAIyD,MAAM;MAG1B,IAAIC,GAAG,CAACC,QAAQ,CAAC,4CAA4C,CAAC,EAAE;QAG9D3C,UAAU,CAAC4C,WAAW,GAAG5E,eAAC,CAAC6E,KAAK,CAAC7E,eAAC,CAAC8E,MAAM,CAACJ,GAAG,CAACK,IAAI,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC,EAAGC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAACxD,aAAI,CAACyD,GAAG,CAAC,CAAC,CAAC;QACjGnH,QAAQ,CAACyD,KAAK,CAAE,iCAAgCO,UAAU,CAAC4C,WAAY,EAAC,CAAC;MAC3E;;MAKA,MAAMQ,WAAW,GAAGvH,cAAc,CAACwH,IAAI,CAAEC,CAAC,IAAKZ,GAAG,CAACC,QAAQ,CAACW,CAAC,CAAC,CAAC;MAC/D,IAAI,IAAI,CAACtG,YAAY,KAAK,KAAK,IAAI0F,GAAG,CAACC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAACS,WAAW,EAAE;QAChFf,cAAc,GAAG,IAAI;;QAGrBrC,UAAU,CAACuD,mBAAmB,GAAG,IAAI;MACvC;;MAGA,IAAIlB,cAAc,IAAI,CAACe,WAAW,EAAE;QAClC,KAAK,MAAMI,IAAI,IAAId,GAAG,CAACM,KAAK,CAACS,OAAG,CAAC,EAAE;UACjCzH,QAAQ,CAAC0H,KAAK,CAACF,IAAI,CAAC;UACpB,IAAIA,IAAI,EAAE;YACRxD,UAAU,CAAC2D,kBAAkB,IAAK,GAAEF,OAAI,GAAED,IAAK,EAAC;UAClD;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAOxD,UAAU;EACnB;EAEA,MAAMD,KAAK,CAAEW,SAAS,GAAG,KAAK,EAAE;IAC9B,IAAI,CAACV,UAAU,GAAG,MAAM,IAAI,CAACoB,gBAAgB,CAACV,SAAS,CAAC;IAExD,IAAI,CAACV,UAAU,CAAC2D,kBAAkB,GAAG,EAAE;;IAIvC,OAAO,MAAM,IAAI1D,iBAAC,CAAC,CAAC2D,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAC7D,UAAU,CAACwC,EAAE,CAAC,MAAM,EAAE,OAAOsB,IAAI,EAAEC,MAAM,KAAK;QACjD/H,QAAQ,CAAC0H,KAAK,CAAE,gCAA+BI,IAAK,iBAAgBC,MAAO,GAAE,CAAC;QAE9E,IAAI,IAAI,CAAC/G,YAAY,IAAI,IAAI,CAACgD,UAAU,CAAC4C,WAAW,EAAE;UACpD5G,QAAQ,CAAC0H,KAAK,CAAE,oCAAmC,IAAI,CAAC1D,UAAU,CAAC4C,WAAY,IAAG,CAAC;UACnF,IAAI;YACF,IAAIoB,IAAI,GAAG,MAAMC,WAAE,CAACC,QAAQ,CAAC,IAAI,CAAClE,UAAU,CAAC4C,WAAW,EAAE,MAAM,CAAC;YACjE,KAAK,IAAIY,IAAI,IAAIQ,IAAI,CAAChB,KAAK,CAAC,IAAI,CAAC,EAAE;cACjChH,QAAQ,CAAC0H,KAAK,CAACF,IAAI,CAAC;YACtB;UACF,CAAC,CAAC,OAAOtE,GAAG,EAAE;YACZlD,QAAQ,CAAC0H,KAAK,CAAE,0CAAyCxE,GAAG,CAACE,OAAQ,GAAE,CAAC;UAC1E;QACF;QACA,IAAI,CAACY,UAAU,CAACmE,aAAa,GAAG,IAAI;QACpC,IAAI,IAAI,CAACnE,UAAU,CAACuD,mBAAmB,IAAK,CAACQ,MAAM,IAAID,IAAI,KAAK,CAAE,EAAE;UAClE,OAAOD,MAAM,CAAC,IAAIO,KAAK,CAAE,+BAA8BN,IAAK,GAAEL,OAAI,EAAC,GAChE,4BAA2BA,OAAI,GAAE,IAAI,CAACzD,UAAU,CAAC2D,kBAAmB,EAAC,CAAC,CAAC;QAC5E;QAEA,IAAIjD,SAAS,EAAE;UACb,OAAOkD,OAAO,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,OAAO,CAAC,YAAY;QAClB,IAAI;UACF,MAAMS,KAAK,GAAG,IAAIC,eAAM,CAACC,KAAK,EAAE,CAACxE,KAAK,EAAE;UACxC,MAAM,IAAI,CAACC,UAAU,CAACD,KAAK,CAAC,IAAI,CAAC;UACjC,IAAI,CAACW,SAAS,EAAE;YACd,IAAI8D,MAAM,GAAG,MAAM,IAAI,CAACC,YAAY,CAACJ,KAAK,CAAC;YAC3CT,OAAO,CAACY,MAAM,CAAC;UACjB;QACF,CAAC,CAAC,OAAOtF,GAAG,EAAE;UACZ,IAAIwF,GAAG,GAAI,mCAAkCxF,GAAI,EAAC;UAClD,IAAI,CAAC1C,GAAG,CAACkH,KAAK,CAACgB,GAAG,CAAC;UACnBb,MAAM,CAAC,IAAIO,KAAK,CAACM,GAAG,CAAC,CAAC;QACxB;MACF,CAAC,GAAG;IACN,CAAC,CAAC;EACJ;EAEA,MAAMD,YAAY,CAAEJ,KAAK,EAAE;IAEzB,IAAI,CAAC7H,GAAG,CAACiD,KAAK,CAAE,iBAAgB,IAAI,CAAC/B,aAAc,gCAA+B,CAAC;IACnF,IAAIiH,aAAa,GAAG,IAAI;IACxB,IAAI;MACF,IAAIC,OAAO,GAAGC,QAAQ,CAAC,IAAI,CAACnH,aAAa,GAAG,GAAG,EAAE,EAAE,CAAC;MACpD,MAAM,IAAAoH,uBAAa,EAACF,OAAO,EAAE,IAAI,EAAE,YAAY;QAC7C,IAAI,IAAI,CAAC5E,UAAU,CAACmE,aAAa,EAAE;UAEjC;QACF;QACA,MAAMY,YAAY,GAAG,IAAI,CAACzG,cAAc,CAAC0G,OAAO;QAChD,IAAI,CAAC1G,cAAc,CAAC0G,OAAO,GAAG,IAAI;QAClC,IAAI;UACFL,aAAa,GAAG,MAAM,IAAI,CAACrG,cAAc,CAAC2G,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;UACnE,IAAIN,aAAa,IAAIA,aAAa,CAACO,GAAG,IAAIP,aAAa,CAACO,GAAG,CAACC,EAAE,EAAE;YAC9D,IAAI,CAACC,QAAQ,GAAGT,aAAa,CAACO,GAAG,CAACC,EAAE;UACtC;UACA,IAAI,CAAC3I,GAAG,CAACiD,KAAK,CAAE,6BAA4B,CAAC;UAC7C,IAAI,CAACjD,GAAG,CAACiD,KAAK,CAAC4F,IAAI,CAACC,SAAS,CAACX,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,OAAOzF,GAAG,EAAE;UACZ,MAAM,IAAIkF,KAAK,CAAE,gDAA+ClF,GAAG,CAACE,OAAQ,EAAC,CAAC;QAChF,CAAC,SAAS;UACR,IAAI,CAACd,cAAc,CAAC0G,OAAO,GAAGD,YAAY;QAC5C;MACF,CAAC,CAAC;MAEF,IAAI,IAAI,CAAC/E,UAAU,CAACmE,aAAa,EAAE;QAEjC,OAAOQ,aAAa;MACtB;MAEA,IAAI,CAACnI,GAAG,CAACiD,KAAK,CAAE,6CAA4C4E,KAAK,CAACkB,WAAW,EAAE,CAACC,cAAc,CAACC,OAAO,CAAC,CAAC,CAAE,IAAG,CAAC;IAChH,CAAC,CAAC,OAAOvG,GAAG,EAAE;MAGZ,IAAI,CAAC1C,GAAG,CAACiD,KAAK,CAACP,GAAG,CAACE,OAAO,CAAC;MAC3B,IAAI,CAAC5C,GAAG,CAAC2C,IAAI,CAAE,kEAAiE,CAAC;IACnF;IACA,OAAOwF,aAAa;EACtB;EAEA,MAAMe,IAAI,GAAI;IACZ,MAAM,IAAAC,kBAAW,EAAC,YAAY,EAAE,IAAI,CAAC3F,UAAU,CAAC;EAClD;AACF;AAAC;AAAA,eAGc7D,UAAU;AAAA"}