export default class ExecuteDriverPlugin extends BasePlugin {
    static newMethodMap: {
        '/session/:sessionId/appium/execute_driver': {
            POST: {
                command: string;
                payloadParams: {
                    required: string[];
                    optional: string[];
                };
            };
        };
    };
    /**
     * This method takes a string which is executed as javascript in the context of
     * a new nodejs VM, and which has available a webdriverio driver object, having
     * already been attached to the currently running session.
     *
     * @param {function} next - standard behaviour for executeDriverScript
     * @param {BaseDriver} driver - Appium driver handling this command
     * @param {string} script - the string representing the driver script to run
     * @param {string} [scriptType='webdriverio'] - the name of the driver script
     * library (currently only webdriverio is supported)
     * @param {number} [timeoutMs=3600000] - timeout for the script process
     *
     * @returns {Object} - a JSONifiable object representing the return value of
     * the script
     */
    executeDriverScript(next: Function, driver: BaseDriver, script: string, scriptType?: string | undefined, timeoutMs?: number | undefined): any;
}
import { BasePlugin } from "@appium/base-plugin";
//# sourceMappingURL=plugin.d.ts.map