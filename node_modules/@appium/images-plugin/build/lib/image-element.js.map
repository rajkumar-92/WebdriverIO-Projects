{"version":3,"file":"image-element.js","names":["IMAGE_ELEMENT_PREFIX","TAP_DURATION_MS","IMAGE_EL_TAP_STRATEGY_W3C","IMAGE_EL_TAP_STRATEGY_MJSONWP","IMAGE_TAP_STRATEGIES","DEFAULT_TEMPLATE_IMAGE_SCALE","ImageElement","constructor","b64Template","rect","score","b64Result","finder","template","id","util","uuidV4","b64MatchedImage","size","width","height","location","x","y","center","matchedImage","asElement","protocolKey","equals","other","click","driver","newImgEl","settings","Object","assign","DEFAULT_SETTINGS","getSettings","autoUpdateImageElementPosition","updatePos","checkForImageElementStaleness","imageElementTapStrategy","includes","Error","JSON","stringify","log","info","findByImage","shouldCheckStaleness","ignoreDefaultImageTemplateScale","err","errors","StaleElementReferenceError","warn","_","clone","action","type","parameters","pointerType","actions","duration","button","performActions","options","performTouch","execute","imgEl","cmd","args","NotYetImplementedError"],"sources":["../../lib/image-element.js"],"sourcesContent":["import _ from 'lodash';\nimport {errors} from 'appium/driver';\nimport {util} from 'appium/support';\nimport log from './logger';\nimport {DEFAULT_SETTINGS} from './finder';\n\nconst IMAGE_ELEMENT_PREFIX = 'appium-image-element-';\nconst TAP_DURATION_MS = 125;\nconst IMAGE_EL_TAP_STRATEGY_W3C = 'w3cActions';\nconst IMAGE_EL_TAP_STRATEGY_MJSONWP = 'touchActions';\nconst IMAGE_TAP_STRATEGIES = [IMAGE_EL_TAP_STRATEGY_MJSONWP, IMAGE_EL_TAP_STRATEGY_W3C];\nconst DEFAULT_TEMPLATE_IMAGE_SCALE = 1.0;\n\n/**\n * @typedef Dimension\n * @property {number} width - width of rect\n * @property {number} height - height of rect\n */\n\n/**\n * @typedef Position\n * @property {number} x - x coordinate\n * @property {number} y - y coordinate\n */\n\n/**\n * Representation of an \"image element\", which is simply a set of coordinates\n * and methods that can be used on that set of coordinates via the driver\n */\nexport default class ImageElement {\n  /**\n   * @param {string} b64Template - the base64-encoded image which was used to\n   *                               find this ImageElement\n   * @param {Rect} rect - bounds of matched image element\n   * @param {number} score The similarity score as a float number in range [0.0, 1.0].\n   * 1.0 is the highest score (means both images are totally equal).\n   * @param {string?} b64Result - the base64-encoded image which has matched marks.\n   *                              Defaults to null.\n   * @param {import('./finder').default?} finder - the finder we can use to re-check stale elements\n   */\n  constructor(b64Template, rect, score, b64Result = null, finder = null) {\n    this.template = b64Template;\n    this.rect = rect;\n    this.id = `${IMAGE_ELEMENT_PREFIX}${util.uuidV4()}`;\n    this.b64MatchedImage = b64Result;\n    this.score = score;\n    this.finder = finder;\n  }\n\n  /**\n   * @returns {Dimension} - dimension of element\n   */\n  get size() {\n    return {width: this.rect.width, height: this.rect.height};\n  }\n\n  /**\n   * @returns {Position} - coordinates of top-left corner of element\n   */\n  get location() {\n    return {x: this.rect.x, y: this.rect.y};\n  }\n\n  /**\n   * @returns {Position} - coordinates of center of element\n   */\n  get center() {\n    return {\n      x: this.rect.x + this.rect.width / 2,\n      y: this.rect.y + this.rect.height / 2,\n    };\n  }\n\n  /**\n   * @returns {?string} - the base64-encoded image which has matched marks\n   */\n  get matchedImage() {\n    return this.b64MatchedImage;\n  }\n\n  /**\n   * @param {string} protocolKey - the protocol-specific JSON key for\n   * a WebElement\n   *\n   * @returns {Element} - this image element as a WebElement\n   */\n  asElement(protocolKey) {\n    return {[protocolKey]: this.id};\n  }\n\n  /**\n   * @param {ImageElement} other - an ImageElement to compare with this one\n   *\n   * @returns {boolean} - whether the other element and this one have the same\n   * properties\n   */\n  equals(other) {\n    return (\n      this.rect.x === other.rect.x &&\n      this.rect.y === other.rect.y &&\n      this.rect.width === other.rect.width &&\n      this.rect.height === other.rect.height\n    );\n  }\n\n  /**\n   * Use a driver to tap the screen at the center of this ImageElement's\n   * position\n   *\n   * @param {BaseDriver} driver - driver for calling actions with\n   */\n  async click(driver) {\n    // before we click we need to make sure the element is actually still there\n    // where we expect it to be\n    let newImgEl;\n    const settings = Object.assign({}, DEFAULT_SETTINGS, driver.settings.getSettings());\n    const {\n      autoUpdateImageElementPosition: updatePos,\n      checkForImageElementStaleness,\n      imageElementTapStrategy,\n    } = settings;\n\n    // validate tap strategy\n    if (!IMAGE_TAP_STRATEGIES.includes(imageElementTapStrategy)) {\n      throw new Error(\n        `Incorrect imageElementTapStrategy setting ` +\n          `'${imageElementTapStrategy}'. Must be one of ` +\n          JSON.stringify(IMAGE_TAP_STRATEGIES)\n      );\n    }\n\n    if (checkForImageElementStaleness || updatePos) {\n      log.info('Checking image element for staleness before clicking');\n      try {\n        newImgEl = await this.finder.findByImage(this.template, {\n          shouldCheckStaleness: true,\n          // Set ignoreDefaultImageTemplateScale because this.template is device screenshot based image\n          // managed inside Appium after finidng image by template which managed by a user\n          ignoreDefaultImageTemplateScale: true,\n        });\n      } catch (err) {\n        throw new errors.StaleElementReferenceError();\n      }\n\n      if (!this.equals(newImgEl)) {\n        log.warn(\n          `When trying to click on an image element, the image changed ` +\n            `position from where it was originally found. It is now at ` +\n            `${JSON.stringify(newImgEl.rect)} and was originally at ` +\n            `${JSON.stringify(this.rect)}.`\n        );\n        if (updatePos) {\n          log.warn('Click will proceed at new coordinates');\n          this.rect = _.clone(newImgEl.rect);\n        } else {\n          log.warn(\n            'Click will take place at original coordinates. If you ' +\n              'would like Appium to automatically click the new ' +\n              \"coordinates, set the 'autoUpdateImageElementPosition' \" +\n              'setting to true'\n          );\n        }\n      }\n    }\n\n    const {x, y} = this.center;\n    log.info(`Will tap on image element at coordinate [${x}, ${y}]`);\n\n    if (imageElementTapStrategy === IMAGE_EL_TAP_STRATEGY_W3C) {\n      // set up a W3C action to click on the image by position\n      log.info('Will tap using W3C actions');\n      const action = {\n        type: 'pointer',\n        id: 'mouse',\n        parameters: {pointerType: 'touch'},\n        actions: [\n          {type: 'pointerMove', x, y, duration: 0},\n          {type: 'pointerDown', button: 0},\n          {type: 'pause', duration: TAP_DURATION_MS},\n          {type: 'pointerUp', button: 0},\n        ],\n      };\n\n      // check if the driver has the appropriate performActions method\n      if (driver.performActions) {\n        return await driver.performActions([action]);\n      }\n\n      // if not, warn and fall back to the other method\n      log.warn('Driver does not seem to implement W3C actions, falling back ' + 'to TouchActions');\n    }\n\n    // if the w3c strategy was not requested, do the only other option (mjsonwp\n    // touch actions)\n    log.info('Will tap using MJSONWP TouchActions');\n    const action = {\n      action: 'tap',\n      options: {x, y},\n    };\n\n    if (driver.performTouch) {\n      return await driver.performTouch([action]);\n    }\n\n    throw new Error(\n      \"Driver did not implement the 'performTouch' command. \" +\n        'For drivers to support finding image elements, they ' +\n        \"should support 'performTouch' and 'performActions'\"\n    );\n  }\n\n  /**\n   * Handle various Appium commands that involve an image element\n   *\n   * @param {import('appium/driver').BaseDriver} driver - the driver to use for commands\n   * @param {string} cmd - the name of the driver command\n   * @param {string} imgElId - the id of the ImageElement to work with\n   * @param {string[]} args - Rest of arguments for executeScripts\n   *\n   * @returns {object} - the result of running a command\n   */\n  static async execute(driver, imgEl, cmd, ...args) {\n    switch (cmd) {\n      case 'click':\n        return await imgEl.click(driver);\n      case 'elementDisplayed':\n        return true;\n      case 'getSize':\n        return imgEl.size;\n      case 'getLocation':\n      case 'getLocationInView':\n        return imgEl.location;\n      case 'getElementRect':\n        return imgEl.rect;\n      case 'getAttribute':\n        // /session/:sessionId/element/:elementId/attribute/:name\n        // /session/:sessionId/element/:elementId/attribute/visual should retun the visual data\n        // e.g. [\"content-desc\",\"appium-image-element-xxxxx\",\"xxxxx\"], [\"visual\",\"appium-image-element-xxxxx\",\"xxxxx\"]\n        switch (args[0]) {\n          case 'visual':\n            return imgEl.matchedImage;\n          case 'score':\n            return imgEl.score;\n          default:\n            throw new errors.NotYetImplementedError();\n        }\n      default:\n        throw new errors.NotYetImplementedError();\n    }\n  }\n}\n\nexport {\n  ImageElement,\n  IMAGE_EL_TAP_STRATEGY_MJSONWP,\n  IMAGE_EL_TAP_STRATEGY_W3C,\n  DEFAULT_TEMPLATE_IMAGE_SCALE,\n  IMAGE_ELEMENT_PREFIX,\n};\n\n/**\n * @typedef {import('@appium/types').Rect} Rect\n * @typedef {import('@appium/types').Element} Element\n */\n"],"mappings":"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"}