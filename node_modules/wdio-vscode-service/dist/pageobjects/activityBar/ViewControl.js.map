{"version":3,"file":"ViewControl.js","sourceRoot":"","sources":["../../../src/pageobjects/activityBar/ViewControl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ChainablePromiseElement } from 'webdriverio'\n\nimport {\n    ActivityBar, DebugView, SideBarView, ScmView\n} from '../..'\nimport { NewScmView } from '../sidebar/scm/NewScmView'\n\nimport {\n    PageDecorator, IPageDecorator, ElementWithContextMenu, VSCodeLocatorMap\n} from '../utils'\nimport { ViewControl as ViewControlLocators } from '../../locators/1.73.0'\n\nexport interface ViewControl extends IPageDecorator<typeof ViewControlLocators> { }\n/**\n * Page object representing a view container item in the activity bar\n *\n * ```ts\n * const workbench = await browser.getWorkbench()\n * const viewControls = await workbench.getActivityBar().getViewControls()\n * console.log(await Promise.all(viewControls.map((vc) => vc.getTitle())))\n * // returns: [\n * //    'Explorer',\n * //    'Search',\n * //    'Source Control',\n * //    'Run and Debug',\n * //    'Extensions'\n * // ]\n * ```\n *\n * @category ActivityBar\n */\n@PageDecorator(ViewControlLocators)\nexport class ViewControl extends ElementWithContextMenu<typeof ViewControlLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ViewControl' as const\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        element: ChainablePromiseElement<WebdriverIO.Element>,\n        public bar: ActivityBar\n    ) {\n        super(locators, element, bar.elem)\n    }\n\n    /**\n     * Opens the associated view if not already open\n     * @returns Promise resolving to SideBarView object representing the opened view\n     */\n    async openView (): Promise<SideBarView<any> | NewScmView | ScmView | DebugView> {\n        const klass = await this.elem.getAttribute(this.locators.attribute)\n        if (klass.indexOf(this.locators.klass) < 0) {\n            await this.elem.click()\n            // eslint-disable-next-line wdio/no-pause\n            await browser.pause(500)\n        }\n        const view = await new SideBarView(this.locatorMap).wait()\n        if ((await view.elem.$$(this.locators.scmId)).length > 0) {\n            if (await browser.getVSCodeChannel() === 'vscode' && await browser.getVSCodeVersion() >= '1.47.0') {\n                return new NewScmView(this.locatorMap).wait()\n            }\n            return new ScmView(this.locatorMap).wait()\n        }\n        if ((await view.elem.$$(this.locators.debugId)).length > 0) {\n            return new DebugView(this.locatorMap).wait()\n        }\n        return view\n    }\n\n    /**\n     * Closes the associated view if not already closed\n     * @returns Promise resolving when the view closes\n     */\n    async closeView (): Promise<void> {\n        const klass = await this.elem.getAttribute(this.locators.attribute)\n        if (klass.indexOf(this.locators.klass) > -1) {\n            await this.elem.click()\n        }\n    }\n\n    /**\n     * Returns the title of the associated view\n     * @param includeKeyboardShortcuts if true it includes the keyboard shortcut\n     *                                 in the title (e.g. \"Source Control (Ctrl+Shift+G)\")\n     */\n    async getTitle (includeKeyboardShortcuts = false): Promise<string> {\n        const title = await this.badge$.getAttribute('aria-label')\n        if (!includeKeyboardShortcuts) {\n            /**\n             * first strip out possible pending annotation, e.g.\n             * \"Source Control (⌃⇧G) - 8 pending\n             */\n            const [label] = title.split(' - ')\n\n            /**\n             * next, strip out possible keyboard shortcuts, e.g.\n             * \"Source Control (⌃⇧G)\n             */\n            return label.endsWith(')')\n                ? label.split(' ').slice(0, -1).join(' ')\n                : label\n        }\n\n        return title\n    }\n}\n"]}