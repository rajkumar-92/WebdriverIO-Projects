{"version":3,"file":"ActivityBar.js","sourceRoot":"","sources":["../../../src/pageobjects/activityBar/ActivityBar.ts"],"names":[],"mappings":"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","sourcesContent":["import { ViewControl, ActionsControl } from '..'\nimport { PageDecorator, IPageDecorator, ElementWithContextMenu } from '../utils'\nimport { ActivityBar as ActivityBarLocators } from '../../locators/1.73.0'\n\nexport interface ActivityBar extends IPageDecorator<typeof ActivityBarLocators> {}\n/**\n * Page object representing the left side activity bar in VS Code\n *\n * @category ActivityBar\n */\n@PageDecorator(ActivityBarLocators)\nexport class ActivityBar extends ElementWithContextMenu<typeof ActivityBarLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ActivityBar' as const\n\n    /**\n     * Find all view containers displayed in the activity bar\n     * @returns Promise resolving to array of ViewControl objects\n     */\n    async getViewControls (): Promise<ViewControl[]> {\n        const views: ViewControl[] = []\n        const viewContainer = await this.viewContainer$\n        for (const element of await viewContainer.$$(this.locators.actionItem)) {\n            views.push(await new ViewControl(\n                this.locatorMap,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                element as any,\n                this\n            ).wait())\n        }\n        return views\n    }\n\n    /**\n     * Find a view container with a given title\n     * @param name title of the view\n     * @returns Promise resolving to ViewControl object representing the view selector, undefined if not found\n     */\n    async getViewControl (name: string): Promise<ViewControl | undefined> {\n        const controls = await this.getViewControls()\n        const names = await Promise.all(\n            controls.map(async (item) => item.getTitle())\n        )\n        const index = names.findIndex((value) => value.indexOf(name) > -1)\n        if (index > -1) {\n            return controls[index]\n        }\n        return undefined\n    }\n\n    /**\n     * Returns selected view control\n     * @returns Promise resolving to selected ViewControl object\n     */\n    async getSelectedViewAction (): Promise<ViewControl> {\n        const element = await this.viewContainer$.$(this.locators.actionItemSelected)\n        return new ViewControl(\n            this.locatorMap,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            element as any,\n            this\n        ).wait()\n    }\n\n    /**\n     * Find all global action controls displayed on the bottom of the activity bar\n     * @returns Promise resolving to array of ActionsControl objects\n     */\n    async getGlobalActions (): Promise<ActionsControl[]> {\n        const actions: ActionsControl[] = []\n        const actionContainer = await this.actionsContainer$\n        for (const element of await actionContainer.$$(this.locators.actionItem)) {\n            actions.push(await new ActionsControl(\n                this.locatorMap,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                element as any\n            ).wait())\n        }\n        return actions\n    }\n\n    /**\n     * Find an action control with a given title\n     * @param name title of the global action\n     * @returns Promise resolving to ActionsControl object representing the action selector, undefined if not found\n     */\n    async getGlobalAction (name: string): Promise<ActionsControl | undefined> {\n        const actions = await this.getGlobalActions()\n        const names = await Promise.all(actions.map(async (item) => item.getTitle()))\n        const index = names.findIndex((value) => value.indexOf(name) > -1)\n        if (index > -1) {\n            return actions[index]\n        }\n        return undefined\n    }\n}\n"]}