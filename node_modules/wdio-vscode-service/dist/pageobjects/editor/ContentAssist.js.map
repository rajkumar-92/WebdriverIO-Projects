{"version":3,"file":"ContentAssist.js","sourceRoot":"","sources":["../../../src/pageobjects/editor/ContentAssist.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChainablePromiseElement } from 'webdriverio'\n\nimport {\n    TextEditor, Menu, MenuItem, DebugConsoleView\n} from '..'\nimport {\n    PageDecorator, IPageDecorator, VSCodeLocatorMap, sleep\n} from '../utils'\nimport { ContentAssist as ContentAssistLocators } from '../../locators/1.73.0'\n\nexport interface ContentAssist extends IPageDecorator<typeof ContentAssistLocators> {}\n/**\n * Page object representing the content assistant\n *\n * @category Editor\n */\n@PageDecorator(ContentAssistLocators)\nexport class ContentAssist extends Menu<typeof ContentAssistLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ContentAssist' as const\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        parent: TextEditor | DebugConsoleView\n    ) {\n        super(locators)\n        this.setParentElement(parent.elem)\n    }\n\n    /**\n     * Get content assist item by name/text, scroll through the list\n     * until the item is found, or the end is reached\n     *\n     * @param name name/text to search by\n     * @returns Promise resolving to ContentAssistItem object if found, undefined otherwise\n     */\n    async getItem (name: string): Promise<ContentAssistItem | undefined> {\n        let lastItem = false\n        const scrollable = await this.itemList$\n\n        let firstItem = await this.firstItem$$\n        while (firstItem.length < 1) {\n            await scrollable.addValue(['Page Up'])\n            firstItem = await this.firstItem$$\n        }\n\n        while (!lastItem) {\n            const items = await this.getItems()\n\n            for (const item of items) {\n                if (await item.getLabel() === name) {\n                    return item\n                }\n                lastItem = lastItem || (await item.elem.getAttribute('data-last-element')) === 'true'\n            }\n            if (!lastItem) {\n                await scrollable.addValue(['PageDown'])\n                await sleep(100)\n            }\n        }\n\n        return undefined\n    }\n\n    /**\n     * Get all visible content assist items\n     * @returns Promise resolving to array of ContentAssistItem objects\n     */\n    async getItems (): Promise<ContentAssistItem[]> {\n        await browser.waitUntil(() => this.isLoaded())\n\n        const elements = await this.elem\n            .$(this.locators.itemRows)\n            .$$(this.locators.itemRow)\n        const items: ContentAssistItem[] = []\n\n        for (const item of elements) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            items.push(await new ContentAssistItem(this.locatorMap, item as any, this).wait())\n        }\n        return items\n    }\n\n    /**\n     * Find if the content assist is still loading the suggestions\n     * @returns promise that resolves to true when suggestions are done loading,\n     * to false otherwise\n     */\n    async isLoaded (): Promise<boolean> {\n        const message = await this.message$\n        if (await message.isDisplayed()) {\n            if ((await message.getText()).startsWith('No suggestions')) {\n                return true\n            }\n            return false\n        }\n        return true\n    }\n}\n\nexport interface ContentAssistItem extends IPageDecorator<typeof ContentAssistLocators> {}\n/**\n * Page object for a content assist item\n *\n * @category Editor\n */\n@PageDecorator(ContentAssistLocators)\nexport class ContentAssistItem extends MenuItem<typeof ContentAssistLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ContentAssist' as const\n    public parentMenu: ContentAssist\n    public label = ''\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        item: string | ChainablePromiseElement<WebdriverIO.Element>,\n        contentAssist: ContentAssist\n    ) {\n        super(locators, item)\n        this.parentMenu = contentAssist\n    }\n\n    async getLabel (): Promise<string> {\n        const labelDiv = await this.itemLabel$\n        return labelDiv.getText()\n    }\n}\n"]}