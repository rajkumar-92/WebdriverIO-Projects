{"version":3,"file":"ExtensionsViewSection.js","sourceRoot":"","sources":["../../../../src/pageobjects/sidebar/extensions/ExtensionsViewSection.ts"],"names":[],"mappings":"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","sourcesContent":["import { ViewSection } from '../ViewSection'\nimport { ExtensionsViewItem, AllViewSectionLocators } from '../..'\nimport { PageDecorator, IPageDecorator } from '../../utils'\nimport {\n    ViewSection as ViewSectionLocators,\n    ExtensionsViewSection as ExtensionsViewSectionLocators\n} from '../../../locators/1.73.0'\nimport { CMD_KEY } from '../../../constants'\n\n/**\n * Categories of extensions to search for\n */\nenum ExtensionCategory {\n    Installed = '@installed',\n    Enabled = '@enabled',\n    Disabled = '@disabled',\n    Outdated = '@outdated',\n    Recommended = '@recommended'\n}\n\nexport interface ExtensionsViewSection extends IPageDecorator<AllViewSectionLocators> { }\n/**\n * View section containing extensions\n *\n * @category Sidebar\n */\n@PageDecorator({ ...ViewSectionLocators, ...ExtensionsViewSectionLocators })\nexport class ExtensionsViewSection extends ViewSection {\n    /**\n     * @private\n     */\n    public locatorKey = ['ViewSection' as const, 'ExtensionsViewSection' as const]\n\n    async getVisibleItems (): Promise<ExtensionsViewItem[]> {\n        await this.items$.$(this.locators.itemRow).waitForExist({\n            timeoutMsg: 'Could not find any extension items'\n        })\n        const extensionRows = await this.items$.$$(this.locators.itemRow)\n        const extensionViewItems: ExtensionsViewItem[] = []\n\n        for (const row of extensionRows) {\n            // add implicit wait to avoid stale element exceptions\n            // eslint-disable-next-line wdio/no-pause\n            await browser.pause(100)\n            extensionViewItems.push(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                await new ExtensionsViewItem(this.locatorMap, row as any, this).wait()\n            )\n        }\n\n        return extensionViewItems\n    }\n\n    /**\n     * Search for an extension by title. This utilizes the search bar\n     * in the Extensions view, which switches the perspective to the\n     * section representing the chosen category and temporarily hides all other sections.\n     * If you wish to continue working with the initial view section\n     * (i.e. Enabled), use the clearSearch method to reset it back to default\n     *\n     * @param title title to search for in '@category name' format,\n     * e.g '@installed extension'. If no @category is present, marketplace will be searched\n     *\n     * @returns Promise resolving to ExtensionsViewItem if such item exists, undefined otherwise\n     */\n    async findItem (title: string): Promise<ExtensionsViewItem | undefined> {\n        await this.clearSearch()\n        const progress = await this.content.progress$\n        const searchField = await this.content.elem.$(this.locators.searchBox)\n        await searchField.addValue(title)\n\n        await progress.waitForDisplayed()\n        await progress.waitForDisplayed({ reverse: true })\n\n        const sectionTitle = this.getSectionForCategory(title)\n        const section = await this.content.getSection(sectionTitle) as ExtensionsViewSection\n\n        const titleParts = title.split(' ')\n        if (titleParts[0].startsWith('@')) {\n            title = titleParts.slice(1).join(' ')\n        }\n\n        const extensions = await section.getVisibleItems()\n\n        for (const extension of extensions) {\n            if (await extension.getTitle() === title) {\n                return extension\n            }\n        }\n\n        return undefined\n    }\n\n    /**\n     * Clears the search bar on top of the view\n     * @returns Promise resolving when the search box is cleared\n     */\n    async clearSearch (): Promise<void> {\n        const progress = await this.content.progress$\n        const searchField = await this.content.elem.$(this.locators.searchBox)\n        const textField = await this.content.elem.$(this.locators.textContainer)\n\n        try {\n            await textField.$(this.locators.textField)\n            await searchField.addValue([CMD_KEY, 'a'])\n            await searchField.addValue(['Backspace'])\n            await progress.waitForDisplayed()\n            await progress.waitForDisplayed({ reverse: true })\n        } catch (err) {\n            // do nothing, the text field is empty\n        }\n    }\n\n    /**\n     * Find and open an extension item\n     * @param title title of the extension\n     * @returns Promise resolving when the item is clicked\n     */\n    async openItem (title: string): Promise<never[]> {\n        const item = await this.findItem(title)\n        if (item) {\n            await item.elem.click()\n        }\n        return []\n    }\n\n    private getSectionForCategory (title: string): string {\n        const category = title.split(' ')[0].toLowerCase()\n        switch (category) {\n            case ExtensionCategory.Disabled:\n                return 'Disabled'\n            case ExtensionCategory.Enabled:\n                return 'Enabled'\n            case ExtensionCategory.Installed:\n                return 'Installed'\n            case ExtensionCategory.Outdated:\n                return 'Outdated'\n            case ExtensionCategory.Recommended:\n                return 'Other Recommendations'\n            default:\n                return 'Marketplace'\n        }\n    }\n}\n"]}