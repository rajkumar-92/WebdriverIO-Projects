{"version":3,"file":"WelcomeContent.js","sourceRoot":"","sources":["../../../src/pageobjects/sidebar/WelcomeContent.ts"],"names":[],"mappings":";;;;;;;;;AAGA,oCAEiB;AACjB,mDAAgF;AAGhF;;;;;;GAMG;AAEI,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,gBAAuC;IAM7E;;;OAGG;IACH,YACI,QAA0B,EAC1B,KAAmD,EAC5C,cAAqC;QAE5C,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;QAFf,mBAAc,GAAd,cAAc,CAAuB;QAZhD;;WAEG;QACI,eAAU,GAAG,gBAAyB,CAAA;IAY7C,CAAC;IAED,gDAAgD;IACzC,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;IAC9B,CAAC;CACJ,CAAA;AAtBY,oBAAoB;IADhC,IAAA,qBAAa,EAAC,wBAAsB,CAAC;GACzB,oBAAoB,CAsBhC;AAtBY,oDAAoB;AAyBjC;;;;;;;;;;;;;GAaG;AAEI,IAAM,qBAAqB,GAA3B,MAAM,qBAAsB,SAAQ,gBAAuC;IAM9E;;;OAGG;IACH,YACI,QAA0B,EAC1B,KAAmD,EACnD,MAAmB;QAEnB,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;QAdvC;;WAEG;QACI,eAAU,GAAG,gBAAyB,CAAA;IAY7C,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,WAAW;QACpB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAA;QAC1C,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,UAAU,EAAE,CAAA;YACpC,IAAI,OAAO,KAAK,GAAG,EAAE;gBACjB,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;aACrB;YAED,iEAAiE;YACjE,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAQ,EAAE,IAAI,CAAC,CAAA;QACpE,CAAC,CAAC,CAAC,CAAA;IACP,CAAC;IAED,+CAA+C;IACxC,UAAU;QACb,iEAAiE;QACjE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAW,EAAE,IAAI,CAAC,CAAC,CAAA;IACpG,CAAC;IAED;;;OAGG;IACI,eAAe;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;IACpD,CAAC;CACJ,CAAA;AAhDY,qBAAqB;IADjC,IAAA,qBAAa,EAAC,wBAAsB,CAAC;GACzB,qBAAqB,CAgDjC;AAhDY,sDAAqB","sourcesContent":["import { ChainablePromiseElement } from 'webdriverio'\n\nimport { ViewSection } from '..'\nimport {\n    BasePage, PageDecorator, IPageDecorator, VSCodeLocatorMap\n} from '../utils'\nimport { WelcomeContent as WelcomeContentLocators } from '../../locators/1.73.0'\n\nexport interface WelcomeContentButton extends IPageDecorator<typeof WelcomeContentLocators> {}\n/**\n * A button that appears in the welcome content and can be clicked to execute a command.\n *\n * To execute the command bound to this button simply run: `await button.click();`.\n *\n * @category Sidebar\n */\n@PageDecorator(WelcomeContentLocators)\nexport class WelcomeContentButton extends BasePage<typeof WelcomeContentLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'WelcomeContent' as const\n\n    /**\n     * @param panel  The panel containing the button in the welcome section\n     * @param welcomeSection  The enclosing welcome section\n     */\n    constructor (\n        locators: VSCodeLocatorMap,\n        panel: ChainablePromiseElement<WebdriverIO.Element>,\n        public welcomeSection: WelcomeContentSection\n    ) {\n        super(locators, panel)\n    }\n\n    /** Return the title displayed on this button */\n    public getTitle (): Promise<string> {\n        return this.elem.getText()\n    }\n}\n\nexport interface WelcomeContentSection extends IPageDecorator<typeof WelcomeContentLocators> {}\n/**\n * A section in an empty custom view, see:\n * https://code.visualstudio.com/api/extension-guides/tree-view#welcome-content\n *\n * The welcome section contains two types of elements: text entries and buttons that can be bound to commands.\n * The text sections can be accessed via [[getTextSections]], the buttons on the\n * other hand via [[getButtons]].\n * This however looses the information of the order of the buttons and lines\n * with respect to each other. This can be remedied by using [[getContents]],\n * which returns both in the order that they are found (at the expense, that you\n * now must use typechecks to find out what you got).\n *\n * @category Sidebar\n */\n@PageDecorator(WelcomeContentLocators)\nexport class WelcomeContentSection extends BasePage<typeof WelcomeContentLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'WelcomeContent' as const\n\n    /**\n     * @param panel  The panel containing the welcome content.\n     * @param parent  The webelement in which the welcome content is embedded.\n     */\n    constructor (\n        locators: VSCodeLocatorMap,\n        panel: ChainablePromiseElement<WebdriverIO.Element>,\n        parent: ViewSection\n    ) {\n        super(locators, panel, parent.elem)\n    }\n\n    /**\n     * Combination of [[getButtons]] and [[getTextSections]]: returns all entries in the welcome\n     * view in the order that they appear.\n     */\n    public async getContents (): Promise<(WelcomeContentButton | string)[]> {\n        const elements = await this.buttonOrText$$\n        return Promise.all(elements.map(async (e) => {\n            const tagName = await e.getTagName()\n            if (tagName === 'p') {\n                return e.getText()\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return new WelcomeContentButton(this.locatorMap, e as any, this)\n        }))\n    }\n\n    /** Finds all buttons in the welcome content */\n    public getButtons (): Promise<WelcomeContentButton[]> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return this.button$$.map((elem) => new WelcomeContentButton(this.locatorMap, elem as any, this))\n    }\n\n    /**\n     * Finds all text entries in the welcome content and returns each line as an\n     * element in an array.\n     */\n    public getTextSections (): Promise<string[]> {\n        return this.text$$.map((elem) => elem.getText())\n    }\n}\n"]}