{"version":3,"file":"DebugView.js","sourceRoot":"","sources":["../../../../src/pageobjects/sidebar/debug/DebugView.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gDAA4C;AAC5C,uCAA2D;AAC3D,sDAAyE;AAGzE;;;;GAIG;AAEI,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,yBAAqC;IAA7D;;QACH;;WAEG;QACI,eAAU,GAAG,WAAoB,CAAA;IAiD5C,CAAC;IA/CG;;;OAGG;IACH,KAAK,CAAC,sBAAsB;QACxB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;QAC1E,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QACxD,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;IACtC,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,uBAAuB;QACzB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;QAC1E,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QACxD,MAAM,OAAO,GAAa,EAAE,CAAA;QAC5B,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QAE1D,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC1B,IAAI,MAAM,MAAM,CAAC,SAAS,EAAE,EAAE;gBAC1B,OAAO,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAA;aACnD;SACJ;QAED,OAAO,OAAO,CAAA;IAClB,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,yBAAyB,CAAE,KAAa;QAC1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;QAC1E,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QACxD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAA;QAC/D,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;IACxB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QACP,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;QAC1E,MAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAA;IACrD,CAAC;CACJ,CAAA;AArDY,SAAS;IADrB,IAAA,qBAAa,EAAC,mBAAiB,CAAC;GACpB,SAAS,CAqDrB;AArDY,8BAAS","sourcesContent":["import { SideBarView } from '../SideBarView'\nimport { PageDecorator, IPageDecorator } from '../../utils'\nimport { DebugView as DebugViewLocators } from '../../../locators/1.73.0'\n\nexport interface DebugView extends IPageDecorator<typeof DebugViewLocators> { }\n/**\n * Page object representing the Run/Debug view in the side bar\n *\n * @category Sidebar\n */\n@PageDecorator(DebugViewLocators)\nexport class DebugView extends SideBarView<typeof DebugViewLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'DebugView' as const\n\n    /**\n     * Get the title of the selected launch configuration\n     * @returns Promise resolving to the title\n     */\n    async getLaunchConfiguration (): Promise<string> {\n        const action = await this.getTitlePart().elem.$(this.locators.launchCombo)\n        const combo = await action.$(this.locators.launchSelect)\n        return combo.getAttribute('title')\n    }\n\n    /**\n     * Get titles of all available launch configurations\n     * @returns Promise resolving to list of titles\n     */\n    async getLaunchConfigurations (): Promise<string[]> {\n        const action = await this.getTitlePart().elem.$(this.locators.launchCombo)\n        const combo = await action.$(this.locators.launchSelect)\n        const configs: string[] = []\n        const options = await combo.$$(this.locators.launchOption)\n\n        for (const option of options) {\n            if (await option.isEnabled()) {\n                configs.push(await option.getAttribute('value'))\n            }\n        }\n\n        return configs\n    }\n\n    /**\n     * Select a given launch configuration\n     * @param title title of the configuration to select\n     */\n    async selectLaunchConfiguration (title: string): Promise<void> {\n        const action = await this.getTitlePart().elem.$(this.locators.launchCombo)\n        const combo = await action.$(this.locators.launchSelect)\n        const option = await combo.$(this.locators.optionByName(title))\n        await option.click()\n    }\n\n    /**\n     * Start Debugging using the current launch configuration\n     */\n    async start (): Promise<void> {\n        const action = await this.getTitlePart().elem.$(this.locators.launchCombo)\n        await action.$(this.locators.startButton).click()\n    }\n}\n"]}