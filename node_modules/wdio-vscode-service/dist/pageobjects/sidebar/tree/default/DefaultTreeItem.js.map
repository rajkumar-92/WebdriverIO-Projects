{"version":3,"file":"DefaultTreeItem.js","sourceRoot":"","sources":["../../../../../src/pageobjects/sidebar/tree/default/DefaultTreeItem.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,6CAA2D;AAE3D,0CAAgF;AAChF,yDAGoC;AAGpC;;;;GAIG;AAEI,IAAM,eAAe,uBAArB,MAAM,eAAgB,SAAQ,mBAAQ;IAMzC,YACI,QAA0B,EAC1B,OAAqD,EAC9C,QAAqB;QAE5B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA;QAFhC,aAAQ,GAAR,QAAQ,CAAa;QARhC;;WAEG;QACI,eAAU,GAAG,CAAC,UAAmB,EAAE,iBAA0B,CAAC,CAAA;IAQrE,CAAC;IAED,cAAc;QACV,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACrC,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAmB,CAAC,CAAA;IACzF,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;IAC9C,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;QAC9D,OAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;IAChD,CAAC;IAED,KAAK,CAAC,WAAW;QACb,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,OAAiB,CAAC,CAAA;QAC3F,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAC3B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CACpB,IAAI,iBAAe,CACf,IAAI,CAAC,UAAU;QACf,iEAAiE;QACjE,GAAU,EACV,IAAI,CAAC,QAAQ,CAChB,CAAC,IAAI,EAAE,CACX,CAAC,CACL,CAAA;QACD,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,KAAK,CAAC,YAAY;QACd,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;QAC9D,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAA;IACnD,CAAC;CACJ,CAAA;AAlDY,eAAe;IAD3B,IAAA,qBAAa,EAAC,EAAE,GAAG,kBAAgB,EAAE,GAAG,yBAAuB,EAAE,CAAC;GACtD,eAAe,CAkD3B;AAlDY,0CAAe","sourcesContent":["import { ChainablePromiseElement } from 'webdriverio'\n\nimport { TreeItem, ViewItemLocators } from '../../ViewItem'\nimport { TreeSection } from '../TreeSection'\nimport { PageDecorator, IPageDecorator, VSCodeLocatorMap } from '../../../utils'\nimport {\n    TreeItem as TreeItemLocators,\n    DefaultTreeItem as DefaultTreeItemLocators\n} from '../../../../locators/1.73.0'\n\nexport interface DefaultTreeItem extends IPageDecorator<ViewItemLocators> { }\n/**\n * Default tree item base on the items in explorer view\n *\n * @category Sidebar\n */\n@PageDecorator({ ...TreeItemLocators, ...DefaultTreeItemLocators })\nexport class DefaultTreeItem extends TreeItem {\n    /**\n     * @private\n     */\n    public locatorKey = ['TreeItem' as const, 'DefaultTreeItem' as const]\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        element: ChainablePromiseElement<WebdriverIO.Element>,\n        public viewPart: TreeSection\n    ) {\n        super(locators, element, viewPart.elem)\n    }\n\n    getDescription () {\n        return Promise.resolve(undefined)\n    }\n\n    async getLabel (): Promise<string> {\n        return this.elem.getAttribute(this.locatorMap.DefaultTreeSection.itemLabel as string)\n    }\n\n    async getTooltip (): Promise<string> {\n        return this.tooltip$.getAttribute('title')\n    }\n\n    async isExpanded (): Promise<boolean> {\n        const twistieClass = await this.twistie$.getAttribute('class')\n        return twistieClass.indexOf('collapsed') < 0\n    }\n\n    async getChildren (): Promise<TreeItem[]> {\n        const rows = await this.getChildItems(this.locatorMap.DefaultTreeSection.itemRow as string)\n        const items = await Promise.all(\n            rows.map(async (row) => (\n                new DefaultTreeItem(\n                    this.locatorMap,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    row as any,\n                    this.viewPart\n                ).wait()\n            ))\n        )\n        return items\n    }\n\n    async isExpandable (): Promise<boolean> {\n        const twistieClass = await this.twistie$.getAttribute('class')\n        return twistieClass.indexOf('collapsible') > -1\n    }\n}\n"]}