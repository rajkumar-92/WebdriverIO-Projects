"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultTreeSection = void 0;
const TreeSection_1 = require("../TreeSection");
const DefaultTreeItem_1 = require("./DefaultTreeItem");
const utils_1 = require("../../../utils");
const _1_73_0_1 = require("../../../../locators/1.73.0");
/**
 * Default view section
 *
 * @category Sidebar
 */
let DefaultTreeSection = class DefaultTreeSection extends TreeSection_1.TreeSection {
    constructor() {
        super(...arguments);
        /**
         * @private
         */
        this.locatorKey = ['ViewSection', 'DefaultTreeSection'];
    }
    async getVisibleItems() {
        const items = [];
        const elements = await this.itemRow$$;
        for (const element of elements) {
            items.push(
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            await new DefaultTreeItem_1.DefaultTreeItem(this.locatorMap, element, this).wait());
        }
        return items;
    }
    async findItem(label, maxLevel = 0) {
        await this.expand();
        const container = await this.rowContainer$;
        await container.addValue(['Home']);
        let item;
        do {
            const temp = await container.$$(this.locatorMap.DefaultTreeItem.ctor(label));
            if (temp.length > 0) {
                const level = +await temp[0].getAttribute(this.locators.level);
                if (maxLevel < 1 || level <= maxLevel) {
                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                    item = await new DefaultTreeItem_1.DefaultTreeItem(this.locatorMap, temp[0], this).wait();
                }
            }
            if (!item) {
                const lastrow = await container.$$(this.locators.lastRow);
                if (lastrow.length > 0) {
                    break;
                }
                await container.addValue(['Page Down']);
            }
        } while (!item);
        return item;
    }
};
DefaultTreeSection = __decorate([
    (0, utils_1.PageDecorator)({ ..._1_73_0_1.ViewSection, ..._1_73_0_1.DefaultTreeSection })
], DefaultTreeSection);
exports.DefaultTreeSection = DefaultTreeSection;
//# sourceMappingURL=DefaultTreeSection.js.map