/// <reference types="webdriverio/async" />
import { ChainablePromiseElement } from 'webdriverio';
import { TreeItem, ViewItemLocators } from '../../ViewItem';
import { TreeSection } from '../TreeSection';
import { IPageDecorator, VSCodeLocatorMap } from '../../../utils';
export interface DefaultTreeItem extends IPageDecorator<ViewItemLocators> {
}
/**
 * Default tree item base on the items in explorer view
 *
 * @category Sidebar
 */
export declare class DefaultTreeItem extends TreeItem {
    viewPart: TreeSection;
    /**
     * @private
     */
    locatorKey: ("TreeItem" | "DefaultTreeItem")[];
    constructor(locators: VSCodeLocatorMap, element: ChainablePromiseElement<WebdriverIO.Element>, viewPart: TreeSection);
    getDescription(): Promise<undefined>;
    getLabel(): Promise<string>;
    getTooltip(): Promise<string>;
    isExpanded(): Promise<boolean>;
    getChildren(): Promise<TreeItem[]>;
    isExpandable(): Promise<boolean>;
}
//# sourceMappingURL=DefaultTreeItem.d.ts.map