/// <reference types="webdriverio/async" />
import type { ChainablePromiseElement } from 'webdriverio';
import { TreeSection } from '../TreeSection';
import { TreeItem, ViewItemLocators } from '../../ViewItem';
import { IPageDecorator, VSCodeLocatorMap } from '../../../utils';
export interface CustomTreeItem extends IPageDecorator<ViewItemLocators> {
}
/**
 * View item in a custom-made content section (e.g. an extension tree view)
 *
 * @category Sidebar
 */
export declare class CustomTreeItem extends TreeItem {
    viewPart: TreeSection;
    /**
     * @private
     */
    locatorKey: ("TreeItem" | "CustomTreeItem")[];
    constructor(locators: VSCodeLocatorMap, element: ChainablePromiseElement<WebdriverIO.Element>, viewPart: TreeSection);
    getLabel(): Promise<string>;
    getTooltip(): Promise<string>;
    getDescription(): Promise<string>;
    isExpanded(): Promise<boolean>;
    getChildren(): Promise<TreeItem[]>;
    isExpandable(): Promise<boolean>;
}
//# sourceMappingURL=CustomTreeItem.d.ts.map