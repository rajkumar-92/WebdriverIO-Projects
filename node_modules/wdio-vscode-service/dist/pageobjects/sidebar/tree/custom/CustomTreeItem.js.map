{"version":3,"file":"CustomTreeItem.js","sourceRoot":"","sources":["../../../../../src/pageobjects/sidebar/tree/custom/CustomTreeItem.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,6CAA2D;AAC3D,0CAAgF;AAChF,yDAGoC;AAGpC;;;;GAIG;AAEI,IAAM,cAAc,sBAApB,MAAM,cAAe,SAAQ,mBAAQ;IAMxC,YACI,QAA0B,EAC1B,OAAqD,EAC9C,QAAqB;QAE5B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA;QAFhC,aAAQ,GAAR,QAAQ,CAAa;QARhC;;WAEG;QACI,eAAU,GAAG,CAAC,UAAmB,EAAE,gBAAyB,CAAC,CAAA;IAQpE,CAAC;IAED,KAAK,CAAC,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,SAAmB,CAAC,CAAC,OAAO,EAAE,CAAA;IACvF,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA;IACjE,CAAC;IAED,KAAK,CAAC,cAAc;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAA;IACtC,CAAC;IAED,KAAK,CAAC,UAAU;QACZ,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QACrE,OAAO,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAA;IAC/C,CAAC;IAED,KAAK,CAAC,WAAW;QACb,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,OAAiB,CAAC,CAAA;QAC3F,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAC3B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC;QACpB,iEAAiE;QACjE,IAAI,gBAAc,CAAC,IAAI,CAAC,UAAU,EAAE,GAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CACxE,CAAC,CACL,CAAA;QACD,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,KAAK,CAAC,YAAY;QACd,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;QACrE,OAAO,IAAI,KAAK,IAAI,CAAA;IACxB,CAAC;CACJ,CAAA;AA9CY,cAAc;IAD1B,IAAA,qBAAa,EAAC,EAAE,GAAG,kBAAgB,EAAE,GAAG,wBAAsB,EAAE,CAAC;GACrD,cAAc,CA8C1B;AA9CY,wCAAc","sourcesContent":["import type { ChainablePromiseElement } from 'webdriverio'\n\nimport { TreeSection } from '../TreeSection'\nimport { TreeItem, ViewItemLocators } from '../../ViewItem'\nimport { PageDecorator, IPageDecorator, VSCodeLocatorMap } from '../../../utils'\nimport {\n    TreeItem as TreeItemLocators,\n    CustomTreeItem as CustomTreeItemLocators\n} from '../../../../locators/1.73.0'\n\nexport interface CustomTreeItem extends IPageDecorator<ViewItemLocators> { }\n/**\n * View item in a custom-made content section (e.g. an extension tree view)\n *\n * @category Sidebar\n */\n@PageDecorator({ ...TreeItemLocators, ...CustomTreeItemLocators })\nexport class CustomTreeItem extends TreeItem {\n    /**\n     * @private\n     */\n    public locatorKey = ['TreeItem' as const, 'CustomTreeItem' as const]\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        element: ChainablePromiseElement<WebdriverIO.Element>,\n        public viewPart: TreeSection\n    ) {\n        super(locators, element, viewPart.elem)\n    }\n\n    async getLabel (): Promise<string> {\n        return this.elem.$(this.locatorMap.CustomTreeSection.itemLabel as string).getText()\n    }\n\n    async getTooltip (): Promise<string> {\n        return this.elem.getAttribute(this.locators.tooltipAttribute)\n    }\n\n    async getDescription (): Promise<string> {\n        return this.description$.getText()\n    }\n\n    async isExpanded (): Promise<boolean> {\n        const attr = await this.elem.getAttribute(this.locators.expandedAttr)\n        return attr === this.locators.expandedValue\n    }\n\n    async getChildren (): Promise<TreeItem[]> {\n        const rows = await this.getChildItems(this.locatorMap.DefaultTreeSection.itemRow as string)\n        const items = await Promise.all(\n            rows.map(async (row) => (\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                new CustomTreeItem(this.locatorMap, row as any, this.viewPart).wait()\n            ))\n        )\n        return items\n    }\n\n    async isExpandable (): Promise<boolean> {\n        const attr = await this.elem.getAttribute(this.locators.expandedAttr)\n        return attr !== null\n    }\n}\n"]}