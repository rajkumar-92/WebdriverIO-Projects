{"version":3,"file":"NewScmView.js","sourceRoot":"","sources":["../../../../src/pageobjects/sidebar/scm/NewScmView.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    ScmView, ScmProvider, MoreAction, ScmChange\n} from './ScmView'\nimport { ContextMenu } from '../..'\nimport {\n    PageDecorator, IPageDecorator, ElementWithContextMenu, VSCodeLocatorMap\n} from '../../utils'\nimport { ScmView as ScmViewLocators } from '../../../locators/1.73.0'\nimport { CMD_KEY } from '../../../constants'\n\nexport interface NewScmView extends IPageDecorator<typeof ScmViewLocators> { }\n/**\n * New SCM view for code 1.47 onwards\n *\n * @category Sidebar\n */\n@PageDecorator(ScmViewLocators)\nexport class NewScmView extends ScmView {\n    async getProviders (): Promise<ScmProvider[]> {\n        const inputs = await this.inputField$$\n        if (inputs.length < 1) {\n            return []\n        }\n\n        const providers = await this.multiScmProvider$$\n        if (inputs.length === 1 && providers.length < 1) {\n            return [await new SingleScmProvider(this.locatorMap, this.singleScmProvider$, this).wait()]\n        }\n\n        const elements = await this.multiProviderItem$$\n        return Promise.all(\n            elements.map(async (element) => (\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                new MultiScmProvider(this.locatorMap, element as any, this).wait()\n            ))\n        )\n    }\n}\n\nexport interface SingleScmProvider extends IPageDecorator<typeof ScmViewLocators> { }\n/**\n * Implementation for a single SCM provider\n *\n * @category Sidebar\n */\n@PageDecorator(ScmViewLocators)\nexport class SingleScmProvider extends ScmProvider {\n    /**\n     * There is no title available for a single provider\n     */\n    getTitle () {\n        return Promise.resolve('')\n    }\n\n    /**\n     * No title available for single provider\n     */\n    getType () {\n        return Promise.resolve('')\n    }\n\n    async takeAction (title: string): Promise<boolean> {\n        const view = this.view as NewScmView\n        const buttons = await view.getTitlePart().getActions()\n        const names = await Promise.all(buttons.map((button) => button.getTitle()))\n\n        const index = names.findIndex((name) => name === title)\n        if (index > -1) {\n            await buttons[index].elem.click()\n            return true\n        }\n        return false\n    }\n\n    async openMoreActions (): Promise<ContextMenu> {\n        const view = this.view as NewScmView\n        return new MoreAction(this.locatorMap, view).openContextMenu()\n    }\n\n    async getChanges (staged = false): Promise<ScmChange[]> {\n        const count = await this.getChangeCount(staged)\n        const elements: WebdriverIO.Element[] = []\n\n        if (count > 0) {\n            const header = staged\n                ? await this.stagedChanges$\n                : await this.changes$\n            const startIndex = +await header.getAttribute('data-index')\n            const depth = +await header.getAttribute('aria-level') + 1\n\n            const items = await this.itemLevel$$(depth)\n            for (const item of items) {\n                const index = +await item.getAttribute('data-index')\n                if (index > startIndex && index <= startIndex + count) {\n                    elements.push(item)\n                }\n            }\n        }\n        return Promise.all(\n            elements.map(async (element) => (\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                new ScmChange(this.locatorMap, element as any, this).wait()\n            ))\n        )\n    }\n}\n\nexport interface MultiScmProvider extends IPageDecorator<typeof ScmViewLocators> { }\n/**\n * Implementation of an SCM provider when multiple providers are available\n *\n * @category Sidebar\n */\n@PageDecorator(ScmViewLocators)\nexport class MultiScmProvider extends ScmProvider {\n    async takeAction (title: string): Promise<boolean> {\n        const actions = await this.action$$\n        const names = await Promise.all(actions.map(async (action) => action.getAttribute('title')))\n        const index = names.findIndex((item) => item === title)\n\n        if (index > -1) {\n            await actions[index].click()\n            return true\n        }\n        return false\n    }\n\n    async openMoreActions (): Promise<ContextMenu> {\n        return new MultiMoreAction(this.locatorMap, this).openContextMenu()\n    }\n\n    async commitChanges (message: string): Promise<void> {\n        const index = +await this.elem.getAttribute('data-index') + 1\n        const input = await this.view.itemIndex$(index)\n        await input.clearValue()\n        await input.addValue(message)\n        await input.addValue([CMD_KEY, 'Enter'])\n    }\n\n    async getChanges (staged = false): Promise<ScmChange[]> {\n        const count = await this.getChangeCount(staged)\n        const elements: WebdriverIO.Element[] = []\n\n        if (count > 0) {\n            const index = +await this.elem.getAttribute('data-index')\n            const headers = staged\n                ? await this.stagedChanges$$\n                : await this.changes$$\n            let header!: WebdriverIO.Element\n\n            for (const item of headers) {\n                if (+await item.getAttribute('data-index') > index) {\n                    header = item\n                }\n            }\n            if (!header) {\n                return []\n            }\n\n            const startIndex = +await header.getAttribute('data-index')\n            const depth = +await header.getAttribute('aria-level') + 1\n\n            const items = await this.view.itemLevel$$(depth)\n            for (const item of items) {\n                const indexInner = +await item.getAttribute('data-index')\n                if (indexInner > startIndex && indexInner <= startIndex + count) {\n                    elements.push(item)\n                }\n            }\n        }\n        return Promise.all(\n            elements.map(async (element) => (\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                new ScmChange(this.locatorMap, element as any, this).wait()\n            ))\n        )\n    }\n\n    async getChangeCount (staged = false): Promise<number> {\n        const locator = staged ? this.locators.stagedChanges : this.locators.changes\n        const rows = await this.view.elem.$$(locator)\n        const index = +await this.elem.getAttribute('data-index')\n\n        for (const row of rows) {\n            if (+await row.getAttribute('data-index') > index) {\n                const count = await rows[0].$(this.locators.changeCount)\n                return +await count.getText()\n            }\n        }\n        return 0\n    }\n}\n\ninterface MultiMoreAction extends IPageDecorator<typeof ScmViewLocators> { }\n/**\n * Multi More Action\n *\n * @category Sidebar\n */\n@PageDecorator(ScmViewLocators)\nclass MultiMoreAction extends ElementWithContextMenu<typeof ScmViewLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ScmView' as const\n    constructor (\n        locators: VSCodeLocatorMap,\n        public scm: ScmProvider\n    ) {\n        super(locators, locators.ScmView.multiMore as string, scm.elem)\n    }\n}\n"]}