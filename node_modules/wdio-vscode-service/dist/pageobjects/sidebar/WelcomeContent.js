"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WelcomeContentSection = exports.WelcomeContentButton = void 0;
const utils_1 = require("../utils");
const _1_73_0_1 = require("../../locators/1.73.0");
/**
 * A button that appears in the welcome content and can be clicked to execute a command.
 *
 * To execute the command bound to this button simply run: `await button.click();`.
 *
 * @category Sidebar
 */
let WelcomeContentButton = class WelcomeContentButton extends utils_1.BasePage {
    /**
     * @param panel  The panel containing the button in the welcome section
     * @param welcomeSection  The enclosing welcome section
     */
    constructor(locators, panel, welcomeSection) {
        super(locators, panel);
        this.welcomeSection = welcomeSection;
        /**
         * @private
         */
        this.locatorKey = 'WelcomeContent';
    }
    /** Return the title displayed on this button */
    getTitle() {
        return this.elem.getText();
    }
};
WelcomeContentButton = __decorate([
    (0, utils_1.PageDecorator)(_1_73_0_1.WelcomeContent)
], WelcomeContentButton);
exports.WelcomeContentButton = WelcomeContentButton;
/**
 * A section in an empty custom view, see:
 * https://code.visualstudio.com/api/extension-guides/tree-view#welcome-content
 *
 * The welcome section contains two types of elements: text entries and buttons that can be bound to commands.
 * The text sections can be accessed via [[getTextSections]], the buttons on the
 * other hand via [[getButtons]].
 * This however looses the information of the order of the buttons and lines
 * with respect to each other. This can be remedied by using [[getContents]],
 * which returns both in the order that they are found (at the expense, that you
 * now must use typechecks to find out what you got).
 *
 * @category Sidebar
 */
let WelcomeContentSection = class WelcomeContentSection extends utils_1.BasePage {
    /**
     * @param panel  The panel containing the welcome content.
     * @param parent  The webelement in which the welcome content is embedded.
     */
    constructor(locators, panel, parent) {
        super(locators, panel, parent.elem);
        /**
         * @private
         */
        this.locatorKey = 'WelcomeContent';
    }
    /**
     * Combination of [[getButtons]] and [[getTextSections]]: returns all entries in the welcome
     * view in the order that they appear.
     */
    async getContents() {
        const elements = await this.buttonOrText$$;
        return Promise.all(elements.map(async (e) => {
            const tagName = await e.getTagName();
            if (tagName === 'p') {
                return e.getText();
            }
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            return new WelcomeContentButton(this.locatorMap, e, this);
        }));
    }
    /** Finds all buttons in the welcome content */
    getButtons() {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return this.button$$.map((elem) => new WelcomeContentButton(this.locatorMap, elem, this));
    }
    /**
     * Finds all text entries in the welcome content and returns each line as an
     * element in an array.
     */
    getTextSections() {
        return this.text$$.map((elem) => elem.getText());
    }
};
WelcomeContentSection = __decorate([
    (0, utils_1.PageDecorator)(_1_73_0_1.WelcomeContent)
], WelcomeContentSection);
exports.WelcomeContentSection = WelcomeContentSection;
//# sourceMappingURL=WelcomeContent.js.map