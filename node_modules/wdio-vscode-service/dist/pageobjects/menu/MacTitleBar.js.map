{"version":3,"file":"MacTitleBar.js","sourceRoot":"","sources":["../../../src/pageobjects/menu/MacTitleBar.ts"],"names":[],"mappings":";;;AAAA,iDAAwC;AAExC;;;;;;;GAOG;AACH,MAAa,WAAW;IACpB;;;;;;;;;OASG;IACH,MAAM,CAAC,MAAM,CAAE,GAAG,KAAe;QAC7B,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,MAAM,QAAQ,GAAG;YACb,kCAAkC;YAClC,qBAAqB;YACrB,uBAAuB,KAAK,CAAC,CAAC,CAAC,iBAAiB;SACnD,CAAA;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC1C,QAAQ,CAAC,IAAI,CAAC,mBAAmB,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAA;YACvD,WAAW,IAAI,CAAC,CAAA;SACnB;QACD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,QAAQ,CAAC,IAAI,CAAC,oBAAoB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,aAAa,CAAC,CAAA;SAC1E;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACzC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;SAC5B;QACD,MAAM,OAAO,GAAG,iBAAiB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA;QACvD,IAAA,wBAAQ,EAAC,OAAO,CAAC,CAAA;IACrB,CAAC;CACJ;AA/BD,kCA+BC","sourcesContent":["import { execSync } from 'child_process'\n\n/**\n * Handler object for macOS based title bar.\n *\n * __Note:__ depcrecated as it doesn't work for latest MacOS\n *\n * @category Menu\n * @deprecated\n */\nexport class MacTitleBar {\n    /**\n     * Select an item from the mac menu bar by its path,\n     * does not actually visibly open the menus.\n     *\n     * @param items varargs path to the given menu item\n     *  each argument serves as a part of the path in order,\n     *\n     *  e.g. ('File', 'Save') will select the 'Save' item from\n     *  the 'File' submenu\n     */\n    static select (...items: string[]): void {\n        let menuCounter = 0\n        const commands = [\n            'tell application \"System Events\"',\n            'tell process \"Code\"',\n            `tell menu bar item \"${items[0]}\" of menu bar 1`\n        ]\n        for (let i = 1; i < items.length - 1; i += 1) {\n            commands.push(`tell menu item \"${items[i]}\" of menu 1`)\n            menuCounter += 1\n        }\n        if (items.length > 1) {\n            commands.push(`click menu item \"${items[items.length - 1]}\" of menu 1`)\n        }\n        for (let i = 0; i < menuCounter + 3; i += 1) {\n            commands.push('end tell')\n        }\n        const command = `osascript -e '${commands.join('\\n')}'`\n        execSync(command)\n    }\n}\n"]}