"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Menu = void 0;
const utils_1 = require("../utils");
/**
 * Abstract element representing a menu
 *
 * @category Menu
 */
class Menu extends utils_1.BasePage {
    /**
     * Find whether the menu has an item of a given name
     * @param name name of the item to search for
     * @returns true if menu has an item with the given name, false otherwise
     */
    async hasItem(name) {
        const item = await this.getItem(name);
        return Boolean(item?.elem.isDisplayed());
    }
    /**
     * Recursively select an item with a given path.
     *
     * E.g. calling select('File', 'Preferences', 'Settings') will
     * open the 'File' -> 'Preferences' submenus and then click on 'Settings'.
     *
     * Selection happens in order of the arguments, if one of the items in the middle
     * of the path has no children, the consequent path arguments will be ignored.
     *
     *
     * @param path path to the item to select, represented by a sequence of strings
     * @returns void if the last clicked item is a leaf, Menu item representing
     * its submenu otherwise
     */
    async select(...path) {
        let parent = this;
        for (const label of path) {
            const item = await parent.getItem(label);
            if (!item)
                return parent;
            await browser.waitUntil(async () => await item.elem.isDisplayed() && await item.elem.isEnabled());
            const submenu = await item.select();
            if (submenu) {
                parent = submenu;
            }
            else {
                return undefined;
            }
        }
        return parent;
    }
}
exports.Menu = Menu;
//# sourceMappingURL=Menu.js.map